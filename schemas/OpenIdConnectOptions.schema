{
    "$schema": "http://json-schema.org/draft/2019-09/schema",
    "$id": "https://jsonschema.xyz/schemas/OpenIdConnectOptions.schema",
    "contentMediaType": "application/schema+json",
    "lastModified": "2023-12-31T19:08:00.0000+05:00Z",
    "title": "Open ID Connect Options",
    "$defs": {
        "OpenIdConnectConfiguration": {
            "allOf": [
                {
                    "$ref": "#/$defs/BaseConfiguration"
                },
                {
                    "type": "object",
                    "description": "Contains OpenIdConnect configuration that can be populated from a json string.",
                    "additionalProperties": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "properties": {
                        "AdditionalData": {
                            "type": [
                                "null",
                                "object"
                            ],
                            "description": "When deserializing from JSON any properties that are not defined will be placed here.",
                            "additionalProperties": {}
                        },
                        "AcrValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'acr_values_supported'",
                            "items": {
                                "type": "string"
                            }
                        },
                        "AuthorizationEndpoint": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'authorization_endpoint'."
                        },
                        "CheckSessionIframe": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'check_session_iframe'."
                        },
                        "ClaimsSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'claims_supported'",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ClaimsLocalesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'claims_locales_supported'",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ClaimsParameterSupported": {
                            "type": "boolean",
                            "description": "Gets or sets the 'claims_parameter_supported'"
                        },
                        "ClaimTypesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'claim_types_supported'",
                            "items": {
                                "type": "string"
                            }
                        },
                        "DisplayValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'display_values_supported'",
                            "items": {
                                "type": "string"
                            }
                        },
                        "EndSessionEndpoint": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'end_session_endpoint'."
                        },
                        "FrontchannelLogoutSessionSupported": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'frontchannel_logout_session_supported'."
                        },
                        "FrontchannelLogoutSupported": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'frontchannel_logout_supported'."
                        },
                        "GrantTypesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'grant_types_supported'",
                            "items": {
                                "type": "string"
                            }
                        },
                        "HttpLogoutSupported": {
                            "type": "boolean",
                            "description": "Boolean value specifying whether the OP supports HTTP-based logout. Default is false."
                        },
                        "IdTokenEncryptionAlgValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'id_token_encryption_alg_values_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "IdTokenEncryptionEncValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'id_token_encryption_enc_values_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "IdTokenSigningAlgValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'id_token_signing_alg_values_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "IntrospectionEndpoint": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'introspection_endpoint'."
                        },
                        "IntrospectionEndpointAuthMethodsSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'introspection_endpoint_auth_methods_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "IntrospectionEndpointAuthSigningAlgValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'introspection_endpoint_auth_signing_alg_values_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "Issuer": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'issuer'."
                        },
                        "JwksUri": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'jwks_uri'"
                        },
                        "JsonWebKeySet": {
                            "description": "Gets or sets the JsonWebKeySet",
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "$ref": "#/$defs/JsonWebKeySet"
                                }
                            ]
                        },
                        "LogoutSessionSupported": {
                            "type": "boolean",
                            "description": "Boolean value specifying whether the OP can pass a sid (session ID) query parameter to identify the RP session at the OP when the logout_uri is used. Dafault Value is false."
                        },
                        "OpPolicyUri": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'op_policy_uri'"
                        },
                        "OpTosUri": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'op_tos_uri'"
                        },
                        "RegistrationEndpoint": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'registration_endpoint'"
                        },
                        "RequestObjectEncryptionAlgValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'request_object_encryption_alg_values_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "RequestObjectEncryptionEncValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'request_object_encryption_enc_values_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "RequestObjectSigningAlgValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'request_object_signing_alg_values_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "RequestParameterSupported": {
                            "type": "boolean",
                            "description": "Gets or sets the 'request_parameter_supported'"
                        },
                        "RequestUriParameterSupported": {
                            "type": "boolean",
                            "description": "Gets or sets the 'request_uri_parameter_supported'"
                        },
                        "RequireRequestUriRegistration": {
                            "type": "boolean",
                            "description": "Gets or sets the 'require_request_uri_registration'"
                        },
                        "ResponseModesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'response_modes_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ResponseTypesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'response_types_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ServiceDocumentation": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'service_documentation'"
                        },
                        "ScopesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'scopes_supported'",
                            "items": {
                                "type": "string"
                            }
                        },
                        "SubjectTypesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'subject_types_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "TokenEndpoint": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'token_endpoint'."
                        },
                        "ActiveTokenEndpoint": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "This base class property is not used in OpenIdConnect. "
                        },
                        "TokenEndpointAuthMethodsSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'token_endpoint_auth_methods_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "TokenEndpointAuthSigningAlgValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'token_endpoint_auth_signing_alg_values_supported'.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "UILocalesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'ui_locales_supported'",
                            "items": {
                                "type": "string"
                            }
                        },
                        "UserInfoEndpoint": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'user_info_endpoint'."
                        },
                        "UserInfoEndpointEncryptionAlgValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'userinfo_encryption_alg_values_supported'",
                            "items": {
                                "type": "string"
                            }
                        },
                        "UserInfoEndpointEncryptionEncValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'userinfo_encryption_enc_values_supported'",
                            "items": {
                                "type": "string"
                            }
                        },
                        "UserInfoEndpointSigningAlgValuesSupported": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the collection of 'userinfo_signing_alg_values_supported'",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "JsonWebKeySet": {
            "type": "object",
            "description": "Contains a collection of JsonWebKey that can be populated from a json string.",
            "additionalProperties": {
                "oneOf": [
                    {},
                    {
                        "type": "null"
                    }
                ]
            },
            "properties": {
                "AdditionalData": {
                    "type": [
                        "null",
                        "object"
                    ],
                    "description": "When deserializing from JSON any properties that are not defined will be placed here.",
                    "additionalProperties": {}
                },
                "Keys": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "Gets the IList`1.",
                    "items": {
                        "$ref": "#/$defs/JsonWebKey"
                    }
                },
                "SkipUnresolvedJsonWebKeys": {
                    "type": "boolean",
                    "description": "Flag that controls whether unresolved JsonWebKeys will be included in the resulting collection of GetSigningKeys method.",
                    "default": true
                }
            }
        },
        "JsonWebKey": {
            "allOf": [
                {
                    "$ref": "#/$defs/SecurityKey"
                },
                {
                    "type": "object",
                    "description": "Represents a JSON Web Key as defined in https://datatracker.ietf.org/doc/html/rfc7517.",
                    "additionalProperties": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "properties": {
                        "AdditionalData": {
                            "type": [
                                "null",
                                "object"
                            ],
                            "description": "When deserializing from JSON any properties that are not defined will be placed here.",
                            "additionalProperties": {}
                        },
                        "Alg": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'alg' (KeyType)."
                        },
                        "Crv": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'crv' (ECC - Curve)."
                        },
                        "D": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'd' (ECC - Private Key OR RSA - Private Exponent)."
                        },
                        "DP": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'dp' (RSA - First Factor CRT Exponent)."
                        },
                        "DQ": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'dq' (RSA - Second Factor CRT Exponent)."
                        },
                        "E": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'e' (RSA - Exponent)."
                        },
                        "K": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'k' (Symmetric - Key Value)."
                        },
                        "KeyId": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets the key id of this JsonWebKey."
                        },
                        "KeyOps": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the 'key_ops' (Key Operations).",
                            "items": {
                                "type": "string"
                            }
                        },
                        "Kid": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'kid' (Key ID).."
                        },
                        "Kty": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'kty' (Key Type)."
                        },
                        "N": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'n' (RSA - Modulus)."
                        },
                        "Oth": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets or sets the 'oth' (RSA - Other Primes Info).",
                            "items": {
                                "type": "string"
                            }
                        },
                        "P": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'p' (RSA - First Prime Factor).."
                        },
                        "Q": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'q' (RSA - Second  Prime Factor).."
                        },
                        "QI": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'qi' (RSA - First CRT Coefficient).."
                        },
                        "Use": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'use' (Public Key Use).."
                        },
                        "X": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'x' (ECC - X Coordinate).."
                        },
                        "X5c": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "description": "Gets the 'x5c' collection (X.509 Certificate Chain)..",
                            "items": {
                                "type": "string"
                            }
                        },
                        "X5t": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'x5t' (X.509 Certificate SHA-1 thumbprint).."
                        },
                        "X5tS256": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'x5t#S256' (X.509 Certificate SHA-256 thumbprint).."
                        },
                        "X5u": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'x5u' (X.509 URL).."
                        },
                        "Y": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "description": "Gets or sets the 'y' (ECC - Y Coordinate).."
                        },
                        "KeySize": {
                            "type": "integer",
                            "description": "Gets the key size of JsonWebKey.",
                            "format": "int32"
                        },
                        "HasPrivateKey": {
                            "type": "boolean",
                            "description": "Gets a bool indicating if a private key exists."
                        }
                    }
                }
            ]
        },
        "SecurityKey": {
            "type": "object",
            "description": "Base class for Security Key.",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
                "KeyId": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "description": "Gets the key id of this SecurityKey."
                },
                "CryptoProviderFactory": {
                    "description": "Gets or sets CryptoProviderFactory.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/CryptoProviderFactory"
                        }
                    ]
                }
            }
        },
        "CryptoProviderFactory": {
            "type": "object",
            "description": "Creates cryptographic operators by specifying a SecurityKey's and algorithms.",
            "additionalProperties": false,
            "properties": {
                "CryptoProviderCache": {
                    "description": "Gets the CryptoProviderCache",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/CryptoProviderCache"
                        }
                    ]
                },
                "CustomCryptoProvider": {
                    "description": "Extensibility point for creating custom cryptographic operators.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/ICryptoProvider"
                        }
                    ]
                },
                "CacheSignatureProviders": {
                    "type": "boolean",
                    "description": "Gets or sets a bool controlling if SignatureProvider should be cached.",
                    "default": true
                },
                "SignatureProviderObjectPoolCacheSize": {
                    "type": "integer",
                    "description": "Gets or sets the maximum size of the object pool used by the SignatureProvider that are used for crypto objects.",
                    "format": "int32"
                }
            }
        },
        "CryptoProviderCache": {
            "type": "object",
            "description": "Definition of cache for crypto providers",
            "x-abstract": true,
            "additionalProperties": false
        },
        "ICryptoProvider": {
            "type": "object",
            "description": "Provides extensibility for cryptographic operators.\nIf custom operators are needed for then CustomCryptoProvider can be set to\nreturn these operators. CustomCryptoProvider will be before each creation.",
            "x-abstract": true,
            "additionalProperties": false
        },
        "BaseConfiguration": {
            "type": "object",
            "description": "Represents a generic metadata configuration which is applicable for both XML and JSON based configurations.\n            ",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
                "Issuer": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "description": "Gets the issuer specified via the metadata endpoint."
                },
                "SigningKeys": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "Gets the ICollection`1 that the IdentityProvider indicates are to be used in order to sign tokens.",
                    "items": {
                        "$ref": "#/$defs/SecurityKey"
                    }
                },
                "TokenEndpoint": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "description": "Gets or sets the token endpoint specified via the metadata endpoint.\nThis is the fed:PassiveRequestorEndpoint in WS-Federation, https://docs.oasis-open.org/wsfed/federation/v1.2/os/ws-federation-1.2-spec-os.html#:~:text=fed%3ASecurityTokenServiceType/fed%3APassiveRequestorEndpoint\nOr the token_endpoint in the OIDC metadata."
                },
                "ActiveTokenEndpoint": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "description": "Gets or sets the token endpoint specified via the metadata endpoint.\nThis is the fed:SecurityTokenServiceType in WS-Federation, http://docs.oasis-open.org/wsfed/federation/v1.2/os/ws-federation-1.2-spec-os.html#:~:text=fed%3ASecurityTokenSerivceEndpoint"
                },
                "TokenDecryptionKeys": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "Gets the ICollection`1 that the IdentityProvider indicates are to be used in order to decrypt tokens.",
                    "items": {
                        "$ref": "#/$defs/SecurityKey"
                    }
                }
            }
        },
        "IConfigurationManagerOfOpenIdConnectConfiguration": {
            "type": "object",
            "description": "Interface that defines a model for retrieving configuration data.",
            "x-abstract": true,
            "additionalProperties": false
        },
        "ClaimAction": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
                "ClaimType": {
                    "type": "string"
                },
                "ValueType": {
                    "type": "string"
                }
            }
        },
        "OpenIdConnectEvents": {
            "allOf": [
                {
                    "$ref": "#/$defs/RemoteAuthenticationEvents"
                },
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "OnAuthenticationFailed": {
                            "$ref": "#/$defs/FuncOfAuthenticationFailedContextAndTask"
                        },
                        "OnAuthorizationCodeReceived": {
                            "$ref": "#/$defs/FuncOfAuthorizationCodeReceivedContextAndTask"
                        },
                        "OnMessageReceived": {
                            "$ref": "#/$defs/FuncOfMessageReceivedContextAndTask"
                        },
                        "OnRedirectToIdentityProvider": {
                            "$ref": "#/$defs/FuncOfRedirectContextAndTask"
                        },
                        "OnRedirectToIdentityProviderForSignOut": {
                            "$ref": "#/$defs/FuncOfRedirectContextAndTask"
                        },
                        "OnSignedOutCallbackRedirect": {
                            "$ref": "#/$defs/FuncOfRemoteSignOutContextAndTask"
                        },
                        "OnRemoteSignOut": {
                            "$ref": "#/$defs/FuncOfRemoteSignOutContextAndTask"
                        },
                        "OnTokenResponseReceived": {
                            "$ref": "#/$defs/FuncOfTokenResponseReceivedContextAndTask"
                        },
                        "OnTokenValidated": {
                            "$ref": "#/$defs/FuncOfTokenValidatedContextAndTask"
                        },
                        "OnUserInformationReceived": {
                            "$ref": "#/$defs/FuncOfUserInformationReceivedContextAndTask"
                        }
                    }
                }
            ]
        },
        "FuncOfAuthenticationFailedContextAndTask": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "MulticastDelegate": {
            "allOf": [
                {
                    "$ref": "#/$defs/Delegate"
                },
                {
                    "type": "object",
                    "x-abstract": true,
                    "additionalProperties": false
                }
            ]
        },
        "Delegate": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
                "Target": {
                    "oneOf": [
                        {},
                        {
                            "type": "null"
                        }
                    ]
                },
                "Method": {
                    "$ref": "#/$defs/MethodInfo"
                }
            }
        },
        "MethodInfo": {
            "allOf": [
                {
                    "$ref": "#/$defs/MethodBase"
                },
                {
                    "type": "object",
                    "x-abstract": true,
                    "additionalProperties": false,
                    "properties": {
                        "MemberType": {
                            "$ref": "#/$defs/MemberTypes"
                        },
                        "ReturnParameter": {
                            "$ref": "#/$defs/ParameterInfo"
                        },
                        "ReturnType": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "MemberTypes": {
            "type": "integer",
            "description": "",
            "x-enumFlags": true,
            "x-enumNames": [
                "Constructor",
                "Event",
                "Field",
                "Method",
                "Property",
                "TypeInfo",
                "Custom",
                "NestedType",
                "All"
            ],
            "enum": [
                1,
                2,
                4,
                8,
                16,
                32,
                64,
                128,
                191
            ]
        },
        "ParameterInfo": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/ParameterAttributes"
                },
                "Member": {
                    "$ref": "#/$defs/MemberInfo"
                },
                "Name": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ParameterType": {
                    "type": "string"
                },
                "Position": {
                    "type": "integer",
                    "format": "int32"
                },
                "IsIn": {
                    "type": "boolean"
                },
                "IsLcid": {
                    "type": "boolean"
                },
                "IsOptional": {
                    "type": "boolean"
                },
                "IsOut": {
                    "type": "boolean"
                },
                "IsRetval": {
                    "type": "boolean"
                },
                "DefaultValue": {
                    "oneOf": [
                        {},
                        {
                            "type": "null"
                        }
                    ]
                },
                "RawDefaultValue": {
                    "oneOf": [
                        {},
                        {
                            "type": "null"
                        }
                    ]
                },
                "HasDefaultValue": {
                    "type": "boolean"
                },
                "CustomAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/CustomAttributeData"
                    }
                },
                "MetadataToken": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ParameterAttributes": {
            "type": "integer",
            "description": "",
            "x-enumFlags": true,
            "x-enumNames": [
                "None",
                "In",
                "Out",
                "Lcid",
                "Retval",
                "Optional",
                "HasDefault",
                "HasFieldMarshal",
                "Reserved3",
                "Reserved4",
                "ReservedMask"
            ],
            "enum": [
                0,
                1,
                2,
                4,
                8,
                16,
                4096,
                8192,
                16384,
                32768,
                61440
            ]
        },
        "MemberInfo": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
                "Module": {
                    "$ref": "#/$defs/Module"
                },
                "CustomAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/CustomAttributeData"
                    }
                },
                "IsCollectible": {
                    "type": "boolean"
                },
                "MetadataToken": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Module": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
                "Assembly": {
                    "$ref": "#/$defs/Assembly"
                },
                "FullyQualifiedName": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "MDStreamVersion": {
                    "type": "integer",
                    "format": "int32"
                },
                "ModuleVersionId": {
                    "type": "string",
                    "format": "guid"
                },
                "ScopeName": {
                    "type": "string"
                },
                "ModuleHandle": {
                    "$ref": "#/$defs/ModuleHandle"
                },
                "CustomAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/CustomAttributeData"
                    }
                },
                "MetadataToken": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Assembly": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
                "DefinedTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ExportedTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CodeBase": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "deprecated": true,
                    "x-deprecated": true,
                    "x-deprecatedMessage": "Assembly.CodeBase and Assembly.EscapedCodeBase are only included for .NET Framework compatibility. Use Assembly.Location."
                },
                "EntryPoint": {
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/MethodInfo"
                        }
                    ]
                },
                "FullName": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ImageRuntimeVersion": {
                    "type": "string"
                },
                "IsDynamic": {
                    "type": "boolean"
                },
                "Location": {
                    "type": "string"
                },
                "ReflectionOnly": {
                    "type": "boolean"
                },
                "IsCollectible": {
                    "type": "boolean"
                },
                "IsFullyTrusted": {
                    "type": "boolean"
                },
                "CustomAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/CustomAttributeData"
                    }
                },
                "EscapedCodeBase": {
                    "type": "string",
                    "deprecated": true,
                    "x-deprecated": true,
                    "x-deprecatedMessage": "Assembly.CodeBase and Assembly.EscapedCodeBase are only included for .NET Framework compatibility. Use Assembly.Location."
                },
                "ManifestModule": {
                    "$ref": "#/$defs/Module"
                },
                "Modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/Module"
                    }
                },
                "GlobalAssemblyCache": {
                    "type": "boolean",
                    "deprecated": true,
                    "x-deprecated": true,
                    "x-deprecatedMessage": "The Global Assembly Cache is not supported."
                },
                "HostContext": {
                    "type": "integer",
                    "format": "int64"
                },
                "SecurityRuleSet": {
                    "$ref": "#/$defs/SecurityRuleSet"
                }
            }
        },
        "CustomAttributeData": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AttributeType": {
                    "type": "string"
                },
                "Constructor": {
                    "$ref": "#/$defs/ConstructorInfo"
                },
                "ConstructorArguments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/CustomAttributeTypedArgument"
                    }
                },
                "NamedArguments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/CustomAttributeNamedArgument"
                    }
                }
            }
        },
        "ConstructorInfo": {
            "allOf": [
                {
                    "$ref": "#/$defs/MethodBase"
                },
                {
                    "type": "object",
                    "x-abstract": true,
                    "additionalProperties": false,
                    "properties": {
                        "MemberType": {
                            "$ref": "#/$defs/MemberTypes"
                        }
                    }
                }
            ]
        },
        "MethodBase": {
            "allOf": [
                {
                    "$ref": "#/$defs/MemberInfo"
                },
                {
                    "type": "object",
                    "x-abstract": true,
                    "additionalProperties": false,
                    "properties": {
                        "MethodImplementationFlags": {
                            "$ref": "#/$defs/MethodImplAttributes"
                        },
                        "CallingConvention": {
                            "$ref": "#/$defs/CallingConventions"
                        },
                        "IsAbstract": {
                            "type": "boolean"
                        },
                        "IsConstructor": {
                            "type": "boolean"
                        },
                        "IsFinal": {
                            "type": "boolean"
                        },
                        "IsHideBySig": {
                            "type": "boolean"
                        },
                        "IsSpecialName": {
                            "type": "boolean"
                        },
                        "IsStatic": {
                            "type": "boolean"
                        },
                        "IsVirtual": {
                            "type": "boolean"
                        },
                        "IsAssembly": {
                            "type": "boolean"
                        },
                        "IsFamily": {
                            "type": "boolean"
                        },
                        "IsFamilyAndAssembly": {
                            "type": "boolean"
                        },
                        "IsFamilyOrAssembly": {
                            "type": "boolean"
                        },
                        "IsPrivate": {
                            "type": "boolean"
                        },
                        "IsPublic": {
                            "type": "boolean"
                        },
                        "IsConstructedGenericMethod": {
                            "type": "boolean"
                        },
                        "IsGenericMethod": {
                            "type": "boolean"
                        },
                        "IsGenericMethodDefinition": {
                            "type": "boolean"
                        },
                        "ContainsGenericParameters": {
                            "type": "boolean"
                        },
                        "IsSecurityCritical": {
                            "type": "boolean"
                        },
                        "IsSecuritySafeCritical": {
                            "type": "boolean"
                        },
                        "IsSecurityTransparent": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "MethodImplAttributes": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "IL",
                "Managed",
                "Native",
                "OPTIL",
                "CodeTypeMask",
                "Runtime",
                "ManagedMask",
                "Unmanaged",
                "NoInlining",
                "ForwardRef",
                "Synchronized",
                "NoOptimization",
                "PreserveSig",
                "AggressiveInlining",
                "AggressiveOptimization",
                "InternalCall",
                "MaxMethodImplVal"
            ],
            "enum": [
                0,
                0,
                1,
                2,
                3,
                3,
                4,
                4,
                8,
                16,
                32,
                64,
                128,
                256,
                512,
                4096,
                65535
            ]
        },
        "CallingConventions": {
            "type": "integer",
            "description": "",
            "x-enumFlags": true,
            "x-enumNames": [
                "Standard",
                "VarArgs",
                "Any",
                "HasThis",
                "ExplicitThis"
            ],
            "enum": [
                1,
                2,
                3,
                32,
                64
            ]
        },
        "CustomAttributeTypedArgument": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ArgumentType": {
                    "type": "string"
                },
                "Value": {
                    "oneOf": [
                        {},
                        {
                            "type": "null"
                        }
                    ]
                }
            }
        },
        "CustomAttributeNamedArgument": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MemberInfo": {
                    "$ref": "#/$defs/MemberInfo"
                },
                "TypedValue": {
                    "$ref": "#/$defs/CustomAttributeTypedArgument"
                },
                "MemberName": {
                    "type": "string"
                },
                "IsField": {
                    "type": "boolean"
                }
            }
        },
        "SecurityRuleSet": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "None",
                "Level1",
                "Level2"
            ],
            "enum": [
                0,
                1,
                2
            ]
        },
        "ModuleHandle": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MDStreamVersion": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "FuncOfAuthorizationCodeReceivedContextAndTask": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "FuncOfMessageReceivedContextAndTask": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "FuncOfRedirectContextAndTask": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "FuncOfRemoteSignOutContextAndTask": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "FuncOfTokenResponseReceivedContextAndTask": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "FuncOfTokenValidatedContextAndTask": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "FuncOfUserInformationReceivedContextAndTask": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "RemoteAuthenticationEvents": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "OnAccessDenied": {
                    "$ref": "#/$defs/FuncOfAccessDeniedContextAndTask"
                },
                "OnRemoteFailure": {
                    "$ref": "#/$defs/FuncOfRemoteFailureContextAndTask"
                },
                "OnTicketReceived": {
                    "$ref": "#/$defs/FuncOfTicketReceivedContextAndTask"
                }
            }
        },
        "FuncOfAccessDeniedContextAndTask": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "FuncOfRemoteFailureContextAndTask": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "FuncOfTicketReceivedContextAndTask": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "OpenIdConnectProtocolValidator": {
            "type": "object",
            "description": "OpenIdConnectProtocolValidator is used to ensure that an OpenIdConnectMessage\n obtained using OpenIdConnect is compliant with  http://openid.net/specs/openid-connect-core-1_0.html .",
            "additionalProperties": false,
            "properties": {
                "HashAlgorithmMap": {
                    "type": [
                        "null",
                        "object"
                    ],
                    "description": "Gets the algorithm mapping between OpenIdConnect and .Net for Hash algorithms.\na IDictionary`2 that contains mappings from the JWT namespace https://datatracker.ietf.org/doc/html/rfc7518 to .Net.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "NonceLifetime": {
                    "type": "string",
                    "description": "Gets or set the TimeSpan defining how long a nonce is valid.",
                    "format": "duration"
                },
                "RequireAcr": {
                    "type": "boolean",
                    "description": "Gets or sets a value indicating if an 'acr' claim is required.",
                    "default": false
                },
                "RequireAmr": {
                    "type": "boolean",
                    "description": "Gets or sets a value indicating if an 'amr' claim is required.",
                    "default": false
                },
                "RequireAuthTime": {
                    "type": "boolean",
                    "description": "Gets or sets a value indicating if an 'auth_time' claim is required.",
                    "default": false
                },
                "RequireAzp": {
                    "type": "boolean",
                    "description": "Gets or sets a value indicating if an 'azp' claim is required.",
                    "default": false
                },
                "RequireNonce": {
                    "type": "boolean",
                    "description": "Get or sets if a nonce is required.",
                    "default": true
                },
                "RequireState": {
                    "type": "boolean",
                    "description": "Gets or sets a value indicating if a 'state' is required.",
                    "default": true
                },
                "RequireStateValidation": {
                    "type": "boolean",
                    "description": "Gets or sets a value indicating if validation of 'state' is turned on or off.",
                    "default": true
                },
                "RequireSub": {
                    "type": "boolean",
                    "description": "Gets or sets a value indicating if a 'sub' claim is required.",
                    "default": true
                },
                "RequireTimeStampInNonce": {
                    "type": "boolean",
                    "description": "Gets or set logic to control if a nonce is prefixed with a timestamp.",
                    "default": true
                },
                "IdTokenValidator": {
                    "description": "Gets or sets the delegate for validating 'id_token'",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/IdTokenValidator"
                        }
                    ]
                },
                "CryptoProviderFactory": {
                    "description": "Gets or sets the CryptoProviderFactory that will be used for crypto operations.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/CryptoProviderFactory"
                        }
                    ]
                }
            }
        },
        "IdTokenValidator": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Delegate for validating additional claims in 'id_token' ",
                    "additionalProperties": false
                }
            ]
        },
        "OpenIdConnectRedirectBehavior": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "RedirectGet",
                "FormPost"
            ],
            "enum": [
                0,
                1
            ]
        },
        "ISecureDataFormatOfAuthenticationProperties": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
        },
        "ISecureDataFormatOfString": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
        },
        "ISecurityTokenValidator": {
            "type": "object",
            "description": "ISecurityTokenValidator",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
                "CanValidateToken": {
                    "type": "boolean",
                    "description": "Returns true if a token can be validated."
                },
                "MaximumTokenSizeInBytes": {
                    "type": "integer",
                    "description": "Gets and sets the maximum size in bytes, that a will be processed.",
                    "format": "int32"
                }
            }
        },
        "TokenHandler": {
            "type": "object",
            "description": "Defines properties shared across all security token handlers.",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
                "MaximumTokenSizeInBytes": {
                    "type": "integer",
                    "description": "Gets and sets the maximum token size in bytes that will be processed.",
                    "format": "int32"
                },
                "SetDefaultTimesOnTokenCreation": {
                    "type": "boolean",
                    "description": "Gets or sets a bool that controls if token creation will set default 'exp', 'nbf' and 'iat' if not specified.",
                    "default": true
                },
                "TokenLifetimeInMinutes": {
                    "type": "integer",
                    "description": "Gets or sets the token lifetime in minutes.",
                    "format": "int32"
                }
            }
        },
        "TokenValidationParameters": {
            "type": "object",
            "description": "Contains a set of parameters that are used by a SecurityTokenHandler when validating a SecurityToken.",
            "additionalProperties": false,
            "properties": {
                "ActorValidationParameters": {
                    "description": "Gets or sets TokenValidationParameters.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/TokenValidationParameters"
                        }
                    ]
                },
                "AlgorithmValidator": {
                    "description": "Gets or sets a delegate used to validate the cryptographic algorithm used.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/AlgorithmValidator"
                        }
                    ]
                },
                "AudienceValidator": {
                    "description": "Gets or sets a delegate that will be used to validate the audience.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/AudienceValidator"
                        }
                    ]
                },
                "AuthenticationType": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "description": "Gets or sets the AuthenticationType when creating a ClaimsIdentity."
                },
                "ClockSkew": {
                    "type": "string",
                    "description": "Gets or sets the clock skew to apply when validating a time.",
                    "format": "duration",
                    "default": 300
                },
                "ConfigurationManager": {
                    "description": "If set, this property will be used to obtain the issuer and signing keys associated with the metadata endpoint of Issuer.\nThe obtained issuer and signing keys will then be used along with those present on the TokenValidationParameters for validation of the incoming token.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/BaseConfigurationManager"
                        }
                    ]
                },
                "CryptoProviderFactory": {
                    "description": "Users can override the default CryptoProviderFactory with this property. This factory will be used for creating signature providers.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/CryptoProviderFactory"
                        }
                    ]
                },
                "DebugId": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "description": "Gets or sets a string that helps with setting breakpoints when debugging."
                },
                "IgnoreTrailingSlashWhenValidatingAudience": {
                    "type": "boolean",
                    "description": "Gets or sets a boolean that controls if a '/' is significant at the end of the audience.\nThe default is true.",
                    "default": true
                },
                "IncludeTokenOnFailedValidation": {
                    "type": "boolean",
                    "description": "Gets or sets the flag that indicates whether to include the SecurityToken when the validation fails."
                },
                "IssuerSigningKeyValidator": {
                    "description": "Gets or sets a delegate for validating the SecurityKey that signed the token.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/IssuerSigningKeyValidator"
                        }
                    ]
                },
                "IssuerSigningKeyValidatorUsingConfiguration": {
                    "description": "Gets or sets a delegate for validating the SecurityKey that signed the token.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/IssuerSigningKeyValidatorUsingConfiguration"
                        }
                    ]
                },
                "InstancePropertyBag": {
                    "type": [
                        "null",
                        "object"
                    ],
                    "description": "Gets a IDictionary`2 that is unique to this instance.\nCalling Clone will result in a new instance of this IDictionary.",
                    "additionalProperties": {}
                },
                "IsClone": {
                    "type": "boolean",
                    "description": "Gets a value indicating if Clone was called to obtain this instance."
                },
                "IssuerSigningKey": {
                    "description": "Gets or sets the SecurityKey that is to be used for signature validation.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/SecurityKey"
                        }
                    ]
                },
                "IssuerSigningKeyResolver": {
                    "description": "Gets or sets a delegate that will be called to retrieve a SecurityKey used for signature validation.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/IssuerSigningKeyResolver"
                        }
                    ]
                },
                "IssuerSigningKeyResolverUsingConfiguration": {
                    "description": "Gets or sets a delegate that will be called to retrieve a SecurityKey used for signature validation using the\nTokenValidationParameters and BaseConfiguration.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/IssuerSigningKeyResolverUsingConfiguration"
                        }
                    ]
                },
                "IssuerSigningKeys": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "Gets or sets an IEnumerable`1 used for signature validation.",
                    "items": {
                        "$ref": "#/$defs/SecurityKey"
                    }
                },
                "IssuerValidator": {
                    "description": "Gets or sets a delegate that will be used to validate the issuer of the token.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/IssuerValidator"
                        }
                    ]
                },
                "IssuerValidatorUsingConfiguration": {
                    "description": "Gets or sets a delegate that will be used to validate the issuer of the token.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/IssuerValidatorUsingConfiguration"
                        }
                    ]
                },
                "TransformBeforeSignatureValidation": {
                    "description": "Gets or sets a delegate that will be called to transform a token to a supported format before validation.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/TransformBeforeSignatureValidation"
                        }
                    ]
                },
                "LifetimeValidator": {
                    "description": "Gets or sets a delegate that will be used to validate the lifetime of the token",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/LifetimeValidator"
                        }
                    ]
                },
                "LogTokenId": {
                    "type": "boolean",
                    "description": "Gets or sets a Boolean that will decide if the token identifier claim needs to be logged.\nDefault value is true.",
                    "default": true
                },
                "LogValidationExceptions": {
                    "type": "boolean",
                    "description": "Gets or sets a Boolean that will decide if validation failure needs to be logged as an error.\nDefault value is true for backward compatibility of the behavior.\nIf set to false, validation failures are logged as Information and then thrown.",
                    "default": true
                },
                "NameClaimType": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "description": "Gets or sets a String that defines the NameClaimType."
                },
                "NameClaimTypeRetriever": {
                    "description": "Gets or sets a delegate that will be called to set the property NameClaimType after validating a token.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/FuncOfSecurityTokenAndStringAndString"
                        }
                    ]
                },
                "PropertyBag": {
                    "type": [
                        "null",
                        "object"
                    ],
                    "description": "Gets or sets the IDictionary`2 that contains a collection of custom key/value pairs. This allows addition of parameters that could be used in custom token validation scenarios.",
                    "additionalProperties": {}
                },
                "RefreshBeforeValidation": {
                    "type": "boolean",
                    "description": "Gets or sets a boolean to control if configuration required to be refreshed before token validation.",
                    "default": false
                },
                "RequireAudience": {
                    "type": "boolean",
                    "description": "Gets or sets a value indicating whether SAML tokens must have at least one AudienceRestriction.\nThe default is true.",
                    "default": true
                },
                "RequireExpirationTime": {
                    "type": "boolean",
                    "description": "Gets or sets a value indicating whether tokens must have an 'expiration' value.\nThe default is true.",
                    "default": true
                },
                "RequireSignedTokens": {
                    "type": "boolean",
                    "description": "Gets or sets a value indicating whether a SecurityToken can be considered valid if not signed.\nThe default is true.",
                    "default": true
                },
                "RoleClaimType": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "description": "Gets or sets the String that defines the RoleClaimType."
                },
                "RoleClaimTypeRetriever": {
                    "description": "Gets or sets a delegate that will be called to set the property RoleClaimType after validating a token.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/FuncOfSecurityTokenAndStringAndString"
                        }
                    ]
                },
                "SaveSigninToken": {
                    "type": "boolean",
                    "description": "Gets or sets a boolean to control if the original token should be saved after the security token is validated.",
                    "default": false
                },
                "SignatureValidator": {
                    "description": "Gets or sets a delegate that will be used to validate the signature of the token.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/SignatureValidator"
                        }
                    ]
                },
                "SignatureValidatorUsingConfiguration": {
                    "description": "Gets or sets a delegate that will be used to validate the signature of the token using the TokenValidationParameters and\nthe BaseConfiguration.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/SignatureValidatorUsingConfiguration"
                        }
                    ]
                },
                "TokenDecryptionKey": {
                    "description": "Gets or sets the SecurityKey that is to be used for decryption.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/SecurityKey"
                        }
                    ]
                },
                "TokenDecryptionKeyResolver": {
                    "description": "Gets or sets a delegate that will be called to retreive a SecurityKey used for decryption.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/TokenDecryptionKeyResolver"
                        }
                    ]
                },
                "TokenDecryptionKeys": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "Gets or sets the IEnumerable`1 that is to be used for decrypting inbound tokens.",
                    "items": {
                        "$ref": "#/$defs/SecurityKey"
                    }
                },
                "TokenReader": {
                    "description": "Gets or sets a delegate that will be used to read the token.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/TokenReader"
                        }
                    ]
                },
                "TokenReplayCache": {
                    "description": "Gets or set the ITokenReplayCache that store tokens that can be checked to help detect token replay.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/ITokenReplayCache"
                        }
                    ]
                },
                "TokenReplayValidator": {
                    "description": "Gets or sets a delegate that will be used to validate the token replay of the token",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/TokenReplayValidator"
                        }
                    ]
                },
                "TryAllIssuerSigningKeys": {
                    "type": "boolean",
                    "description": "Gets or sets a value indicating whether all IssuerSigningKeys should be tried during signature validation when a key is not matched to token kid or if token kid is empty.\nThe default is true.",
                    "default": true
                },
                "TypeValidator": {
                    "description": "Gets or sets a delegate that will be used to validate the type of the token.\nIf the token type cannot be validated, an exception MUST be thrown by the delegate.\nNote: the 'type' parameter may be null if it couldn't be extracted from its usual location.\nImplementations that need to resolve it from a different location can use the 'token' parameter.",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/TypeValidator"
                        }
                    ]
                },
                "ValidateActor": {
                    "type": "boolean",
                    "description": "Gets or sets a value indicating if an actor token is detected, whether it should be validated.\nThe default is false.",
                    "default": false
                },
                "ValidateAudience": {
                    "type": "boolean",
                    "description": "Gets or sets a boolean to control if the audience will be validated during token validation.",
                    "default": true
                },
                "ValidateIssuer": {
                    "type": "boolean",
                    "description": "Gets or sets a boolean to control if the issuer will be validated during token validation.",
                    "default": true
                },
                "ValidateWithLKG": {
                    "type": "boolean",
                    "description": "Gets or sets a boolean to control if the LKG configuration will be used for token validation.",
                    "default": false
                },
                "ValidateIssuerSigningKey": {
                    "type": "boolean",
                    "description": "Gets or sets a boolean that controls if validation of the SecurityKey that signed the securityToken is called.",
                    "default": false
                },
                "ValidateLifetime": {
                    "type": "boolean",
                    "description": "Gets or sets a boolean to control if the lifetime will be validated during token validation.",
                    "default": true
                },
                "ValidateSignatureLast": {
                    "type": "boolean",
                    "description": "Gets or sets a boolean that controls the validation order of the payload and signature during token validation.",
                    "default": false
                },
                "ValidateTokenReplay": {
                    "type": "boolean",
                    "description": "Gets or sets a boolean to control if the token replay will be validated during token validation.",
                    "default": false
                },
                "ValidAlgorithms": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "Gets or sets the valid algorithms for cryptographic operations.",
                    "items": {
                        "type": "string"
                    }
                },
                "ValidAudience": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "description": "Gets or sets a string that represents a valid audience that will be used to check against the token's audience.\nThe default is null."
                },
                "ValidAudiences": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "Gets or sets the IEnumerable`1 that contains valid audiences that will be used to check against the token's audience.\nThe default is null.",
                    "items": {
                        "type": "string"
                    }
                },
                "ValidIssuer": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "description": "Gets or sets a String that represents a valid issuer that will be used to check against the token's issuer.\nThe default is null."
                },
                "ValidIssuers": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "Gets or sets the IEnumerable`1 that contains valid issuers that will be used to check against the token's issuer.\nThe default is null.",
                    "items": {
                        "type": "string"
                    }
                },
                "ValidTypes": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "Gets or sets the IEnumerable`1 that contains valid types that will be used to check against the JWT header's 'typ' claim.\nIf this property is not set, the 'typ' header claim will not be validated and all types will be accepted.\nIn the case of a JWE, this property will ONLY apply to the inner token header.\nThe default is null.",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AlgorithmValidator": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for AlgorithmValidator",
                    "additionalProperties": false
                }
            ]
        },
        "AudienceValidator": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for AudienceValidator.",
                    "additionalProperties": false
                }
            ]
        },
        "BaseConfigurationManager": {
            "type": "object",
            "description": "Represents a generic configuration manager.",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
                "AutomaticRefreshInterval": {
                    "type": "string",
                    "description": "Gets or sets the TimeSpan that controls how often an automatic metadata refresh should occur.",
                    "format": "duration"
                },
                "LastKnownGoodConfiguration": {
                    "description": "The last known good configuration or LKG (a configuration retrieved in the past that we were able to successfully validate a token against).",
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/BaseConfiguration"
                        }
                    ]
                },
                "LastKnownGoodLifetime": {
                    "type": "string",
                    "description": "The length of time that a last known good configuration is valid for.",
                    "format": "duration"
                },
                "MetadataAddress": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "description": "The metadata address to retrieve the configuration from."
                },
                "RefreshInterval": {
                    "type": "string",
                    "description": "The minimum time between retrievals, in the event that a retrieval failed, or that a refresh was explicitly requested.",
                    "format": "duration"
                },
                "UseLastKnownGoodConfiguration": {
                    "type": "boolean",
                    "description": "Indicates whether the last known good feature should be used, true by default."
                },
                "IsLastKnownGoodValid": {
                    "type": "boolean",
                    "description": "Indicates whether the last known good configuration is still fresh, depends on when the LKG was first used and it's lifetime."
                }
            }
        },
        "IssuerSigningKeyValidator": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for IssuerSigningKeyValidator.",
                    "additionalProperties": false
                }
            ]
        },
        "IssuerSigningKeyValidatorUsingConfiguration": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for IssuerSigningKeyValidatorUsingConfiguration.",
                    "additionalProperties": false
                }
            ]
        },
        "IssuerSigningKeyResolver": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for IssuerSigningKeyResolver.",
                    "additionalProperties": false
                }
            ]
        },
        "IssuerSigningKeyResolverUsingConfiguration": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for IssuerSigningKeyResolverUsingConfiguration.",
                    "additionalProperties": false
                }
            ]
        },
        "IssuerValidator": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for IssuerValidator.",
                    "additionalProperties": false
                }
            ]
        },
        "IssuerValidatorUsingConfiguration": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for IssuerValidatorUsingConfiguration.",
                    "additionalProperties": false
                }
            ]
        },
        "TransformBeforeSignatureValidation": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for TransformBeforeSignatureValidation.",
                    "additionalProperties": false
                }
            ]
        },
        "LifetimeValidator": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for LifetimeValidator.",
                    "additionalProperties": false
                }
            ]
        },
        "FuncOfSecurityTokenAndStringAndString": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "SignatureValidator": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for SignatureValidator.",
                    "additionalProperties": false
                }
            ]
        },
        "SignatureValidatorUsingConfiguration": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for SignatureValidator.",
                    "additionalProperties": false
                }
            ]
        },
        "TokenDecryptionKeyResolver": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for TokenDecryptionKeyResolver.",
                    "additionalProperties": false
                }
            ]
        },
        "TokenReader": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for TokenReader.",
                    "additionalProperties": false
                }
            ]
        },
        "ITokenReplayCache": {
            "type": "object",
            "description": "Interface that defines a simple cache for tacking replaying of security tokens.",
            "x-abstract": true,
            "additionalProperties": false
        },
        "TokenReplayValidator": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for TokenReplayValidator.",
                    "additionalProperties": false
                }
            ]
        },
        "TypeValidator": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "description": "Definition for TypeValidator.",
                    "additionalProperties": false
                }
            ]
        },
        "CookieBuilder": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "Path": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "Domain": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "HttpOnly": {
                    "type": "boolean"
                },
                "SameSite": {
                    "$ref": "#/$defs/SameSiteMode"
                },
                "SecurePolicy": {
                    "$ref": "#/$defs/CookieSecurePolicy"
                },
                "Expiration": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "format": "duration"
                },
                "MaxAge": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "format": "duration"
                },
                "IsEssential": {
                    "type": "boolean"
                },
                "Extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SameSiteMode": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "None",
                "Lax",
                "Strict",
                "Unspecified"
            ],
            "enum": [
                0,
                1,
                2,
                -1
            ]
        },
        "CookieSecurePolicy": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "SameAsRequest",
                "Always",
                "None"
            ],
            "enum": [
                0,
                1,
                2
            ]
        },
        "RemoteAuthenticationOptions": {
            "allOf": [
                {
                    "$ref": "#/$defs/AuthenticationSchemeOptions"
                },
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "BackchannelTimeout": {
                            "type": "string",
                            "format": "duration"
                        },
                        "BackchannelHttpHandler": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "$ref": "#/$defs/HttpMessageHandler"
                                }
                            ]
                        },
                        "Backchannel": {
                            "$ref": "#/$defs/HttpClient"
                        },
                        "DataProtectionProvider": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "$ref": "#/$defs/IDataProtectionProvider"
                                }
                            ]
                        },
                        "CallbackPath": {
                            "type": "string"
                        },
                        "AccessDeniedPath": {
                            "type": "string"
                        },
                        "ReturnUrlParameter": {
                            "type": "string"
                        },
                        "SignInScheme": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "RemoteAuthenticationTimeout": {
                            "type": "string",
                            "format": "duration"
                        },
                        "Events": {
                            "$ref": "#/$defs/RemoteAuthenticationEvents"
                        },
                        "SaveTokens": {
                            "type": "boolean"
                        },
                        "CorrelationCookie": {
                            "$ref": "#/$defs/CookieBuilder"
                        }
                    }
                }
            ]
        },
        "HttpMessageHandler": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
        },
        "HttpClient": {
            "allOf": [
                {
                    "$ref": "#/$defs/HttpMessageInvoker"
                },
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "DefaultRequestHeaders": {
                            "$ref": "#/$defs/HttpRequestHeaders"
                        },
                        "DefaultRequestVersion": {
                            "type": "string"
                        },
                        "DefaultVersionPolicy": {
                            "$ref": "#/$defs/HttpVersionPolicy"
                        },
                        "BaseAddress": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "format": "uri"
                        },
                        "Timeout": {
                            "type": "string",
                            "format": "duration"
                        },
                        "MaxResponseContentBufferSize": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            ]
        },
        "HttpRequestHeaders": {
            "allOf": [
                {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/KeyValuePairOfStringAndIEnumerableOfString"
                    }
                },
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "Accept": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/MediaTypeWithQualityHeaderValue"
                            }
                        },
                        "AcceptCharset": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/StringWithQualityHeaderValue"
                            }
                        },
                        "AcceptEncoding": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/StringWithQualityHeaderValue"
                            }
                        },
                        "AcceptLanguage": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/StringWithQualityHeaderValue"
                            }
                        },
                        "Authorization": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "$ref": "#/$defs/AuthenticationHeaderValue"
                                }
                            ]
                        },
                        "ExpectContinue": {
                            "type": [
                                "boolean",
                                "null"
                            ]
                        },
                        "From": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "Host": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "IfMatch": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/EntityTagHeaderValue"
                            }
                        },
                        "IfModifiedSince": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "format": "date-time"
                        },
                        "IfNoneMatch": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/EntityTagHeaderValue"
                            }
                        },
                        "IfRange": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "$ref": "#/$defs/RangeConditionHeaderValue"
                                }
                            ]
                        },
                        "IfUnmodifiedSince": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "format": "date-time"
                        },
                        "MaxForwards": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "format": "int32"
                        },
                        "Protocol": {
                            "type": [
                                "null",
                                "string"
                            ]
                        },
                        "ProxyAuthorization": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "$ref": "#/$defs/AuthenticationHeaderValue"
                                }
                            ]
                        },
                        "Range": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "$ref": "#/$defs/RangeHeaderValue"
                                }
                            ]
                        },
                        "Referrer": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "format": "uri"
                        },
                        "TE": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/TransferCodingWithQualityHeaderValue"
                            }
                        },
                        "UserAgent": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/ProductInfoHeaderValue"
                            }
                        },
                        "Expect": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/NameValueWithParametersHeaderValue"
                            }
                        },
                        "CacheControl": {
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "$ref": "#/$defs/CacheControlHeaderValue"
                                }
                            ]
                        },
                        "Connection": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ConnectionClose": {
                            "type": [
                                "boolean",
                                "null"
                            ]
                        },
                        "Date": {
                            "type": [
                                "null",
                                "string"
                            ],
                            "format": "date-time"
                        },
                        "Pragma": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/NameValueHeaderValue"
                            }
                        },
                        "Trailer": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "TransferEncoding": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/TransferCodingHeaderValue"
                            }
                        },
                        "TransferEncodingChunked": {
                            "type": [
                                "boolean",
                                "null"
                            ]
                        },
                        "Upgrade": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/ProductHeaderValue"
                            }
                        },
                        "Via": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/ViaHeaderValue"
                            }
                        },
                        "Warning": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/WarningHeaderValue"
                            }
                        }
                    }
                }
            ]
        },
        "MediaTypeWithQualityHeaderValue": {
            "allOf": [
                {
                    "$ref": "#/$defs/MediaTypeHeaderValue"
                },
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "Quality": {
                            "type": [
                                "null",
                                "number"
                            ],
                            "format": "double"
                        }
                    }
                }
            ]
        },
        "MediaTypeHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CharSet": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "Parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/NameValueHeaderValue"
                    }
                },
                "MediaType": {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            }
        },
        "NameValueHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Value": {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            }
        },
        "StringWithQualityHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Value": {
                    "type": "string"
                },
                "Quality": {
                    "type": [
                        "null",
                        "number"
                    ],
                    "format": "double"
                }
            }
        },
        "AuthenticationHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Scheme": {
                    "type": "string"
                },
                "Parameter": {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            }
        },
        "EntityTagHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Tag": {
                    "type": "string"
                },
                "IsWeak": {
                    "type": "boolean"
                }
            }
        },
        "RangeConditionHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Date": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "format": "date-time"
                },
                "EntityTag": {
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/EntityTagHeaderValue"
                        }
                    ]
                }
            }
        },
        "RangeHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Unit": {
                    "type": "string"
                },
                "Ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/RangeItemHeaderValue"
                    }
                }
            }
        },
        "RangeItemHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "From": {
                    "type": [
                        "integer",
                        "null"
                    ],
                    "format": "int64"
                },
                "To": {
                    "type": [
                        "integer",
                        "null"
                    ],
                    "format": "int64"
                }
            }
        },
        "TransferCodingWithQualityHeaderValue": {
            "allOf": [
                {
                    "$ref": "#/$defs/TransferCodingHeaderValue"
                },
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "Quality": {
                            "type": [
                                "null",
                                "number"
                            ],
                            "format": "double"
                        }
                    }
                }
            ]
        },
        "TransferCodingHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Value": {
                    "type": "string"
                },
                "Parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/NameValueHeaderValue"
                    }
                }
            }
        },
        "ProductInfoHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Product": {
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/ProductHeaderValue"
                        }
                    ]
                },
                "Comment": {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            }
        },
        "ProductHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Version": {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            }
        },
        "NameValueWithParametersHeaderValue": {
            "allOf": [
                {
                    "$ref": "#/$defs/NameValueHeaderValue"
                },
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "Parameters": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/NameValueHeaderValue"
                            }
                        }
                    }
                }
            ]
        },
        "CacheControlHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "NoCache": {
                    "type": "boolean"
                },
                "NoCacheHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "NoStore": {
                    "type": "boolean"
                },
                "MaxAge": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "format": "duration"
                },
                "SharedMaxAge": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "format": "duration"
                },
                "MaxStale": {
                    "type": "boolean"
                },
                "MaxStaleLimit": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "format": "duration"
                },
                "MinFresh": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "format": "duration"
                },
                "NoTransform": {
                    "type": "boolean"
                },
                "OnlyIfCached": {
                    "type": "boolean"
                },
                "Public": {
                    "type": "boolean"
                },
                "Private": {
                    "type": "boolean"
                },
                "PrivateHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "MustRevalidate": {
                    "type": "boolean"
                },
                "ProxyRevalidate": {
                    "type": "boolean"
                },
                "Extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/NameValueHeaderValue"
                    }
                }
            }
        },
        "ViaHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ProtocolName": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ProtocolVersion": {
                    "type": "string"
                },
                "ReceivedBy": {
                    "type": "string"
                },
                "Comment": {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            }
        },
        "WarningHeaderValue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "Agent": {
                    "type": "string"
                },
                "Text": {
                    "type": "string"
                },
                "Date": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "format": "date-time"
                }
            }
        },
        "KeyValuePairOfStringAndIEnumerableOfString": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "HttpVersionPolicy": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "RequestVersionOrLower",
                "RequestVersionOrHigher",
                "RequestVersionExact"
            ],
            "enum": [
                0,
                1,
                2
            ]
        },
        "HttpMessageInvoker": {
            "type": "object",
            "additionalProperties": false
        },
        "IDataProtectionProvider": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
        },
        "AuthenticationSchemeOptions": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ClaimsIssuer": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "Events": {
                    "oneOf": [
                        {},
                        {
                            "type": "null"
                        }
                    ]
                },
                "EventsType": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ForwardDefault": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ForwardAuthenticate": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ForwardChallenge": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ForwardForbid": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ForwardSignIn": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ForwardSignOut": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ForwardDefaultSelector": {
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/FuncOfHttpContextAndString"
                        }
                    ]
                },
                "TimeProvider": {
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/TimeProvider"
                        }
                    ]
                }
            }
        },
        "FuncOfHttpContextAndString": {
            "allOf": [
                {
                    "$ref": "#/$defs/MulticastDelegate"
                },
                {
                    "type": "object",
                    "additionalProperties": false
                }
            ]
        },
        "TimeProvider": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
                "LocalTimeZone": {
                    "$ref": "#/$defs/TimeZoneInfo"
                },
                "TimestampFrequency": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TimeZoneInfo": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "type": "string"
                },
                "HasIanaId": {
                    "type": "boolean"
                },
                "DisplayName": {
                    "type": "string"
                },
                "StandardName": {
                    "type": "string"
                },
                "DaylightName": {
                    "type": "string"
                },
                "BaseUtcOffset": {
                    "type": "string",
                    "format": "duration"
                },
                "SupportsDaylightSavingTime": {
                    "type": "boolean"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/RemoteAuthenticationOptions"
        },
        {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Authority": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ClientId": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ClientSecret": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "Configuration": {
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/OpenIdConnectConfiguration"
                        }
                    ]
                },
                "ConfigurationManager": {
                    "oneOf": [
                        {
                            "type": "null"
                        },
                        {
                            "$ref": "#/$defs/IConfigurationManagerOfOpenIdConnectConfiguration"
                        }
                    ]
                },
                "GetClaimsFromUserInfoEndpoint": {
                    "type": "boolean"
                },
                "ClaimActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/ClaimAction"
                    }
                },
                "RequireHttpsMetadata": {
                    "type": "boolean"
                },
                "MetadataAddress": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "Events": {
                    "$ref": "#/$defs/OpenIdConnectEvents"
                },
                "MaxAge": {
                    "type": [
                        "null",
                        "string"
                    ],
                    "format": "duration"
                },
                "ProtocolValidator": {
                    "$ref": "#/$defs/OpenIdConnectProtocolValidator"
                },
                "SignedOutCallbackPath": {
                    "type": "string"
                },
                "SignedOutRedirectUri": {
                    "type": "string"
                },
                "RefreshOnIssuerKeyNotFound": {
                    "type": "boolean"
                },
                "AuthenticationMethod": {
                    "$ref": "#/$defs/OpenIdConnectRedirectBehavior"
                },
                "Resource": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ResponseMode": {
                    "type": "string"
                },
                "ResponseType": {
                    "type": "string"
                },
                "Prompt": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "Scope": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "RemoteSignOutPath": {
                    "type": "string"
                },
                "SignOutScheme": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "StateDataFormat": {
                    "$ref": "#/$defs/ISecureDataFormatOfAuthenticationProperties"
                },
                "StringDataFormat": {
                    "$ref": "#/$defs/ISecureDataFormatOfString"
                },
                "SecurityTokenValidator": {
                    "deprecated": true,
                    "x-deprecated": true,
                    "x-deprecatedMessage": "SecurityTokenValidator is no longer used by default. Use TokenHandler instead. To continue using SecurityTokenValidator, set UseSecurityTokenValidator to true. See https://aka.ms/aspnetcore8/security-token-changes",
                    "oneOf": [
                        {
                            "$ref": "#/$defs/ISecurityTokenValidator"
                        }
                    ]
                },
                "TokenHandler": {
                    "$ref": "#/$defs/TokenHandler"
                },
                "TokenValidationParameters": {
                    "$ref": "#/$defs/TokenValidationParameters"
                },
                "UseTokenLifetime": {
                    "type": "boolean"
                },
                "SkipUnrecognizedRequests": {
                    "type": "boolean"
                },
                "DisableTelemetry": {
                    "type": "boolean"
                },
                "NonceCookie": {
                    "$ref": "#/$defs/CookieBuilder"
                },
                "UsePkce": {
                    "type": "boolean"
                },
                "AutomaticRefreshInterval": {
                    "type": "string",
                    "format": "duration"
                },
                "RefreshInterval": {
                    "type": "string",
                    "format": "duration"
                },
                "MapInboundClaims": {
                    "type": "boolean"
                },
                "UseSecurityTokenValidator": {
                    "type": "boolean"
                }
            }
        }
    ]
}
