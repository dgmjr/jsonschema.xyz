{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://jsonschema.xyz/schemas/Telegram.schema",
    "contentMediaType": "application/schema+json",
    "lastModified": "2023-12-31T19:08:00.0000+05:00Z",
    "title": "Telegram Bot API Schema",
    "components": {
        "responses": {
            "BadRequest": {
                "description": "Bad request, you have provided malformed data.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "The authorization token is invalid or it has been revoked.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "Forbidden": {
                "description": "This action is forbidden.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "The specified resource was not found.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "Conflict": {
                "description": "There is a conflict with another instance using webhook or polling.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "TooManyRequests": {
                "description": "You're doing too many requests, retry after a while.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "ServerError": {
                "description": "The bot API is experiencing some issues, try again later.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "UnknownError": {
                "description": "An unknown error occurred.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            }
        },
        "schemas": {
            "Response": {
                "type": "object",
                "description": "Represents the default response object.",
                "required": [
                    "ok"
                ],
                "properties": {
                    "ok": {
                        "type": "boolean"
                    }
                }
            },
            "Success": {
                "description": "Request was successful, the result is returned.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Response"
                    },
                    {
                        "type": "object",
                        "required": [
                            "result"
                        ],
                        "properties": {
                            "result": {
                                "type": "object"
                            }
                        }
                    }
                ]
            },
            "Error": {
                "description": "Request was unsuccessful, so an error occurred.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Response"
                    },
                    {
                        "type": "object",
                        "required": [
                            "error_code",
                            "description"
                        ],
                        "properties": {
                            "error_code": {
                                "type": "integer"
                            },
                            "description": {
                                "type": "string"
                            },
                            "parameters": {
                                "$ref": "#/components/schemas/ResponseParameters"
                            }
                        }
                    }
                ]
            },
            "Update": {
                "description": "This object represents an incoming update.At most one of the optional parameters can be present in any given update.",
                "required": [
                    "update_id"
                ],
                "properties": {
                    "update_id": {
                        "type": "integer"
                    },
                    "message": {
                        "$ref": "#/components/schemas/Message"
                    },
                    "edited_message": {
                        "$ref": "#/components/schemas/Message"
                    },
                    "channel_post": {
                        "$ref": "#/components/schemas/Message"
                    },
                    "edited_channel_post": {
                        "$ref": "#/components/schemas/Message"
                    },
                    "inline_query": {
                        "$ref": "#/components/schemas/InlineQuery"
                    },
                    "chosen_inline_result": {
                        "$ref": "#/components/schemas/ChosenInlineResult"
                    },
                    "callback_query": {
                        "$ref": "#/components/schemas/CallbackQuery"
                    },
                    "shipping_query": {
                        "$ref": "#/components/schemas/ShippingQuery"
                    },
                    "pre_checkout_query": {
                        "$ref": "#/components/schemas/PreCheckoutQuery"
                    },
                    "poll": {
                        "$ref": "#/components/schemas/Poll"
                    },
                    "poll_answer": {
                        "$ref": "#/components/schemas/PollAnswer"
                    },
                    "my_chat_member": {
                        "$ref": "#/components/schemas/ChatMemberUpdated"
                    },
                    "chat_member": {
                        "$ref": "#/components/schemas/ChatMemberUpdated"
                    },
                    "chat_join_request": {
                        "$ref": "#/components/schemas/ChatJoinRequest"
                    }
                },
                "type": "object"
            },
            "WebhookInfo": {
                "description": "Describes the current status of a webhook.",
                "required": [
                    "url",
                    "has_custom_certificate",
                    "pending_update_count"
                ],
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "has_custom_certificate": {
                        "type": "boolean"
                    },
                    "pending_update_count": {
                        "type": "integer"
                    },
                    "ip_address": {
                        "type": "string"
                    },
                    "last_error_date": {
                        "type": "integer"
                    },
                    "last_error_message": {
                        "type": "string"
                    },
                    "last_synchronization_error_date": {
                        "type": "integer"
                    },
                    "max_connections": {
                        "type": "integer"
                    },
                    "allowed_updates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "description": "This object represents a Telegram user or bot.",
                "required": [
                    "id",
                    "is_bot",
                    "first_name"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "is_bot": {
                        "type": "boolean"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "language_code": {
                        "type": "string"
                    },
                    "is_premium": {
                        "type": "boolean",
                        "default": true
                    },
                    "added_to_attachment_menu": {
                        "type": "boolean",
                        "default": true
                    },
                    "can_join_groups": {
                        "type": "boolean"
                    },
                    "can_read_all_group_messages": {
                        "type": "boolean"
                    },
                    "supports_inline_queries": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Chat": {
                "description": "This object represents a chat.",
                "required": [
                    "id",
                    "type"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "is_forum": {
                        "type": "boolean",
                        "default": true
                    },
                    "photo": {
                        "$ref": "#/components/schemas/ChatPhoto"
                    },
                    "active_usernames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "emoji_status_custom_emoji_id": {
                        "type": "string"
                    },
                    "emoji_status_expiration_date": {
                        "type": "integer"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "has_private_forwards": {
                        "type": "boolean",
                        "default": true
                    },
                    "has_restricted_voice_and_video_messages": {
                        "type": "boolean",
                        "default": true
                    },
                    "join_to_send_messages": {
                        "type": "boolean",
                        "default": true
                    },
                    "join_by_request": {
                        "type": "boolean",
                        "default": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "invite_link": {
                        "type": "string"
                    },
                    "pinned_message": {
                        "$ref": "#/components/schemas/Message"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/ChatPermissions"
                    },
                    "slow_mode_delay": {
                        "type": "integer"
                    },
                    "message_auto_delete_time": {
                        "type": "integer"
                    },
                    "has_aggressive_anti_spam_enabled": {
                        "type": "boolean",
                        "default": true
                    },
                    "has_hidden_members": {
                        "type": "boolean",
                        "default": true
                    },
                    "has_protected_content": {
                        "type": "boolean",
                        "default": true
                    },
                    "sticker_set_name": {
                        "type": "string"
                    },
                    "can_set_sticker_set": {
                        "type": "boolean",
                        "default": true
                    },
                    "linked_chat_id": {
                        "type": "integer"
                    },
                    "location": {
                        "$ref": "#/components/schemas/ChatLocation"
                    }
                },
                "type": "object"
            },
            "Message": {
                "description": "This object represents a message.",
                "required": [
                    "message_id",
                    "date",
                    "chat"
                ],
                "properties": {
                    "message_id": {
                        "type": "integer"
                    },
                    "message_thread_id": {
                        "type": "integer"
                    },
                    "from": {
                        "$ref": "#/components/schemas/User"
                    },
                    "sender_chat": {
                        "$ref": "#/components/schemas/Chat"
                    },
                    "date": {
                        "type": "integer"
                    },
                    "chat": {
                        "$ref": "#/components/schemas/Chat"
                    },
                    "forward_from": {
                        "$ref": "#/components/schemas/User"
                    },
                    "forward_from_chat": {
                        "$ref": "#/components/schemas/Chat"
                    },
                    "forward_from_message_id": {
                        "type": "integer"
                    },
                    "forward_signature": {
                        "type": "string"
                    },
                    "forward_sender_name": {
                        "type": "string"
                    },
                    "forward_date": {
                        "type": "integer"
                    },
                    "is_topic_message": {
                        "type": "boolean",
                        "default": true
                    },
                    "is_automatic_forward": {
                        "type": "boolean",
                        "default": true
                    },
                    "reply_to_message": {
                        "$ref": "#/components/schemas/Message"
                    },
                    "via_bot": {
                        "$ref": "#/components/schemas/User"
                    },
                    "edit_date": {
                        "type": "integer"
                    },
                    "has_protected_content": {
                        "type": "boolean",
                        "default": true
                    },
                    "media_group_id": {
                        "type": "string"
                    },
                    "author_signature": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "animation": {
                        "$ref": "#/components/schemas/Animation"
                    },
                    "audio": {
                        "$ref": "#/components/schemas/Audio"
                    },
                    "document": {
                        "$ref": "#/components/schemas/Document"
                    },
                    "photo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhotoSize"
                        }
                    },
                    "sticker": {
                        "$ref": "#/components/schemas/Sticker"
                    },
                    "story": {
                        "$ref": "#/components/schemas/Story"
                    },
                    "video": {
                        "$ref": "#/components/schemas/Video"
                    },
                    "video_note": {
                        "$ref": "#/components/schemas/VideoNote"
                    },
                    "voice": {
                        "$ref": "#/components/schemas/Voice"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "has_media_spoiler": {
                        "type": "boolean",
                        "default": true
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Contact"
                    },
                    "dice": {
                        "$ref": "#/components/schemas/Dice"
                    },
                    "game": {
                        "$ref": "#/components/schemas/Game"
                    },
                    "poll": {
                        "$ref": "#/components/schemas/Poll"
                    },
                    "venue": {
                        "$ref": "#/components/schemas/Venue"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "new_chat_members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "left_chat_member": {
                        "$ref": "#/components/schemas/User"
                    },
                    "new_chat_title": {
                        "type": "string"
                    },
                    "new_chat_photo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhotoSize"
                        }
                    },
                    "delete_chat_photo": {
                        "type": "boolean",
                        "default": true
                    },
                    "group_chat_created": {
                        "type": "boolean",
                        "default": true
                    },
                    "supergroup_chat_created": {
                        "type": "boolean",
                        "default": true
                    },
                    "channel_chat_created": {
                        "type": "boolean",
                        "default": true
                    },
                    "message_auto_delete_timer_changed": {
                        "$ref": "#/components/schemas/MessageAutoDeleteTimerChanged"
                    },
                    "migrate_to_chat_id": {
                        "type": "integer"
                    },
                    "migrate_from_chat_id": {
                        "type": "integer"
                    },
                    "pinned_message": {
                        "$ref": "#/components/schemas/Message"
                    },
                    "invoice": {
                        "$ref": "#/components/schemas/Invoice"
                    },
                    "successful_payment": {
                        "$ref": "#/components/schemas/SuccessfulPayment"
                    },
                    "user_shared": {
                        "$ref": "#/components/schemas/UserShared"
                    },
                    "chat_shared": {
                        "$ref": "#/components/schemas/ChatShared"
                    },
                    "connected_website": {
                        "type": "string"
                    },
                    "write_access_allowed": {
                        "$ref": "#/components/schemas/WriteAccessAllowed"
                    },
                    "passport_data": {
                        "$ref": "#/components/schemas/PassportData"
                    },
                    "proximity_alert_triggered": {
                        "$ref": "#/components/schemas/ProximityAlertTriggered"
                    },
                    "forum_topic_created": {
                        "$ref": "#/components/schemas/ForumTopicCreated"
                    },
                    "forum_topic_edited": {
                        "$ref": "#/components/schemas/ForumTopicEdited"
                    },
                    "forum_topic_closed": {
                        "$ref": "#/components/schemas/ForumTopicClosed"
                    },
                    "forum_topic_reopened": {
                        "$ref": "#/components/schemas/ForumTopicReopened"
                    },
                    "general_forum_topic_hidden": {
                        "$ref": "#/components/schemas/GeneralForumTopicHidden"
                    },
                    "general_forum_topic_unhidden": {
                        "$ref": "#/components/schemas/GeneralForumTopicUnhidden"
                    },
                    "video_chat_scheduled": {
                        "$ref": "#/components/schemas/VideoChatScheduled"
                    },
                    "video_chat_started": {
                        "$ref": "#/components/schemas/VideoChatStarted"
                    },
                    "video_chat_ended": {
                        "$ref": "#/components/schemas/VideoChatEnded"
                    },
                    "video_chat_participants_invited": {
                        "$ref": "#/components/schemas/VideoChatParticipantsInvited"
                    },
                    "web_app_data": {
                        "$ref": "#/components/schemas/WebAppData"
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    }
                },
                "type": "object"
            },
            "MessageId": {
                "description": "This object represents a unique message identifier.",
                "required": [
                    "message_id"
                ],
                "properties": {
                    "message_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MessageEntity": {
                "description": "This object represents one special entity in a text message. For example, hashtags, usernames, URLs, etc.",
                "required": [
                    "type",
                    "offset",
                    "length"
                ],
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer"
                    },
                    "length": {
                        "type": "integer"
                    },
                    "url": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "language": {
                        "type": "string"
                    },
                    "custom_emoji_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PhotoSize": {
                "description": "This object represents one size of a photo or a file / sticker thumbnail.",
                "required": [
                    "file_id",
                    "file_unique_id",
                    "width",
                    "height"
                ],
                "properties": {
                    "file_id": {
                        "type": "string"
                    },
                    "file_unique_id": {
                        "type": "string"
                    },
                    "width": {
                        "type": "integer"
                    },
                    "height": {
                        "type": "integer"
                    },
                    "file_size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Animation": {
                "description": "This object represents an animation file (GIF or H.264/MPEG-4 AVC video without sound).",
                "required": [
                    "file_id",
                    "file_unique_id",
                    "width",
                    "height",
                    "duration"
                ],
                "properties": {
                    "file_id": {
                        "type": "string"
                    },
                    "file_unique_id": {
                        "type": "string"
                    },
                    "width": {
                        "type": "integer"
                    },
                    "height": {
                        "type": "integer"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/PhotoSize"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "file_size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Audio": {
                "description": "This object represents an audio file to be treated as music by the Telegram clients.",
                "required": [
                    "file_id",
                    "file_unique_id",
                    "duration"
                ],
                "properties": {
                    "file_id": {
                        "type": "string"
                    },
                    "file_unique_id": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "performer": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "file_size": {
                        "type": "integer"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/PhotoSize"
                    }
                },
                "type": "object"
            },
            "Document": {
                "description": "This object represents a general file (as opposed to photos, voice messages and audio files).",
                "required": [
                    "file_id",
                    "file_unique_id"
                ],
                "properties": {
                    "file_id": {
                        "type": "string"
                    },
                    "file_unique_id": {
                        "type": "string"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/PhotoSize"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "file_size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Story": {
                "description": "This object represents a message about a forwarded story in the chat. Currently holds no information.",
                "type": "object"
            },
            "Video": {
                "description": "This object represents a video file.",
                "required": [
                    "file_id",
                    "file_unique_id",
                    "width",
                    "height",
                    "duration"
                ],
                "properties": {
                    "file_id": {
                        "type": "string"
                    },
                    "file_unique_id": {
                        "type": "string"
                    },
                    "width": {
                        "type": "integer"
                    },
                    "height": {
                        "type": "integer"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/PhotoSize"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "file_size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "VideoNote": {
                "description": "This object represents a video message (available in Telegram apps as of v.4.0).",
                "required": [
                    "file_id",
                    "file_unique_id",
                    "length",
                    "duration"
                ],
                "properties": {
                    "file_id": {
                        "type": "string"
                    },
                    "file_unique_id": {
                        "type": "string"
                    },
                    "length": {
                        "type": "integer"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/PhotoSize"
                    },
                    "file_size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Voice": {
                "description": "This object represents a voice note.",
                "required": [
                    "file_id",
                    "file_unique_id",
                    "duration"
                ],
                "properties": {
                    "file_id": {
                        "type": "string"
                    },
                    "file_unique_id": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "file_size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Contact": {
                "description": "This object represents a phone contact.",
                "required": [
                    "phone_number",
                    "first_name"
                ],
                "properties": {
                    "phone_number": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "vcard": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Dice": {
                "description": "This object represents an animated emoji that displays a random value.",
                "required": [
                    "emoji",
                    "value"
                ],
                "properties": {
                    "emoji": {
                        "type": "string"
                    },
                    "value": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PollOption": {
                "description": "This object contains information about one answer option in a poll.",
                "required": [
                    "text",
                    "voter_count"
                ],
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "voter_count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PollAnswer": {
                "description": "This object represents an answer of a user in a non-anonymous poll.",
                "required": [
                    "poll_id",
                    "option_ids"
                ],
                "properties": {
                    "poll_id": {
                        "type": "string"
                    },
                    "voter_chat": {
                        "$ref": "#/components/schemas/Chat"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "option_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "type": "object"
            },
            "Poll": {
                "description": "This object contains information about a poll.",
                "required": [
                    "id",
                    "question",
                    "options",
                    "total_voter_count",
                    "is_closed",
                    "is_anonymous",
                    "type",
                    "allows_multiple_answers"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "question": {
                        "type": "string"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PollOption"
                        }
                    },
                    "total_voter_count": {
                        "type": "integer"
                    },
                    "is_closed": {
                        "type": "boolean"
                    },
                    "is_anonymous": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "allows_multiple_answers": {
                        "type": "boolean"
                    },
                    "correct_option_id": {
                        "type": "integer"
                    },
                    "explanation": {
                        "type": "string"
                    },
                    "explanation_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "open_period": {
                        "type": "integer"
                    },
                    "close_date": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Location": {
                "description": "This object represents a point on the map.",
                "required": [
                    "longitude",
                    "latitude"
                ],
                "properties": {
                    "longitude": {
                        "type": "number"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "horizontal_accuracy": {
                        "type": "number"
                    },
                    "live_period": {
                        "type": "integer"
                    },
                    "heading": {
                        "type": "integer"
                    },
                    "proximity_alert_radius": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Venue": {
                "description": "This object represents a venue.",
                "required": [
                    "location",
                    "title",
                    "address"
                ],
                "properties": {
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "title": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "foursquare_id": {
                        "type": "string"
                    },
                    "foursquare_type": {
                        "type": "string"
                    },
                    "google_place_id": {
                        "type": "string"
                    },
                    "google_place_type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WebAppData": {
                "description": "Describes data sent from a Web App to the bot.",
                "required": [
                    "data",
                    "button_text"
                ],
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "button_text": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProximityAlertTriggered": {
                "description": "This object represents the content of a service message, sent whenever a user in the chat triggers a proximity alert set by another user.",
                "required": [
                    "traveler",
                    "watcher",
                    "distance"
                ],
                "properties": {
                    "traveler": {
                        "$ref": "#/components/schemas/User"
                    },
                    "watcher": {
                        "$ref": "#/components/schemas/User"
                    },
                    "distance": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MessageAutoDeleteTimerChanged": {
                "description": "This object represents a service message about a change in auto-delete timer settings.",
                "required": [
                    "message_auto_delete_time"
                ],
                "properties": {
                    "message_auto_delete_time": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ForumTopicCreated": {
                "description": "This object represents a service message about a new forum topic created in the chat.",
                "required": [
                    "name",
                    "icon_color"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "icon_color": {
                        "type": "integer"
                    },
                    "icon_custom_emoji_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ForumTopicClosed": {
                "description": "This object represents a service message about a forum topic closed in the chat. Currently holds no information.",
                "type": "object"
            },
            "ForumTopicEdited": {
                "description": "This object represents a service message about an edited forum topic.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "icon_custom_emoji_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ForumTopicReopened": {
                "description": "This object represents a service message about a forum topic reopened in the chat. Currently holds no information.",
                "type": "object"
            },
            "GeneralForumTopicHidden": {
                "description": "This object represents a service message about General forum topic hidden in the chat. Currently holds no information.",
                "type": "object"
            },
            "GeneralForumTopicUnhidden": {
                "description": "This object represents a service message about General forum topic unhidden in the chat. Currently holds no information.",
                "type": "object"
            },
            "UserShared": {
                "description": "This object contains information about the user whose identifier was shared with the bot using a KeyboardButtonRequestUser button.",
                "required": [
                    "request_id",
                    "user_id"
                ],
                "properties": {
                    "request_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ChatShared": {
                "description": "This object contains information about the chat whose identifier was shared with the bot using a KeyboardButtonRequestChat button.",
                "required": [
                    "request_id",
                    "chat_id"
                ],
                "properties": {
                    "request_id": {
                        "type": "integer"
                    },
                    "chat_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "WriteAccessAllowed": {
                "description": "This object represents a service message about a user allowing a bot to write messages after adding the bot to the attachment menu or launching a Web App from a link.",
                "properties": {
                    "web_app_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VideoChatScheduled": {
                "description": "This object represents a service message about a video chat scheduled in the chat.",
                "required": [
                    "start_date"
                ],
                "properties": {
                    "start_date": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "VideoChatStarted": {
                "description": "This object represents a service message about a video chat started in the chat. Currently holds no information.",
                "type": "object"
            },
            "VideoChatEnded": {
                "description": "This object represents a service message about a video chat ended in the chat.",
                "required": [
                    "duration"
                ],
                "properties": {
                    "duration": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "VideoChatParticipantsInvited": {
                "description": "This object represents a service message about new members invited to a video chat.",
                "required": [
                    "users"
                ],
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object"
            },
            "UserProfilePhotos": {
                "description": "This object represent a user's profile pictures.",
                "required": [
                    "total_count",
                    "photos"
                ],
                "properties": {
                    "total_count": {
                        "type": "integer"
                    },
                    "photos": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/PhotoSize"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "File": {
                "description": "This object represents a file ready to be downloaded. The file can be downloaded via the link https://api.telegram.org/file/bot<token>/<file_path>. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile.",
                "required": [
                    "file_id",
                    "file_unique_id"
                ],
                "properties": {
                    "file_id": {
                        "type": "string"
                    },
                    "file_unique_id": {
                        "type": "string"
                    },
                    "file_size": {
                        "type": "integer"
                    },
                    "file_path": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WebAppInfo": {
                "description": "Describes a Web App.",
                "required": [
                    "url"
                ],
                "properties": {
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReplyKeyboardMarkup": {
                "description": "This object represents a custom keyboard with reply options (see Introduction to bots for details and examples).",
                "required": [
                    "keyboard"
                ],
                "properties": {
                    "keyboard": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/KeyboardButton"
                            }
                        }
                    },
                    "is_persistent": {
                        "type": "boolean"
                    },
                    "resize_keyboard": {
                        "type": "boolean"
                    },
                    "one_time_keyboard": {
                        "type": "boolean"
                    },
                    "input_field_placeholder": {
                        "type": "string"
                    },
                    "selective": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "KeyboardButton": {
                "description": "This object represents one button of the reply keyboard. For simple text buttons, String can be used instead of this object to specify the button text. The optional fields web_app, request_user, request_chat, request_contact, request_location, and request_poll are mutually exclusive.",
                "required": [
                    "text"
                ],
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "request_user": {
                        "$ref": "#/components/schemas/KeyboardButtonRequestUser"
                    },
                    "request_chat": {
                        "$ref": "#/components/schemas/KeyboardButtonRequestChat"
                    },
                    "request_contact": {
                        "type": "boolean"
                    },
                    "request_location": {
                        "type": "boolean"
                    },
                    "request_poll": {
                        "$ref": "#/components/schemas/KeyboardButtonPollType"
                    },
                    "web_app": {
                        "$ref": "#/components/schemas/WebAppInfo"
                    }
                },
                "type": "object"
            },
            "KeyboardButtonRequestUser": {
                "description": "This object defines the criteria used to request a suitable user. The identifier of the selected user will be shared with the bot when the corresponding button is pressed. More about requesting users »",
                "required": [
                    "request_id"
                ],
                "properties": {
                    "request_id": {
                        "type": "integer"
                    },
                    "user_is_bot": {
                        "type": "boolean"
                    },
                    "user_is_premium": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "KeyboardButtonRequestChat": {
                "description": "This object defines the criteria used to request a suitable chat. The identifier of the selected chat will be shared with the bot when the corresponding button is pressed. More about requesting chats »",
                "required": [
                    "request_id",
                    "chat_is_channel"
                ],
                "properties": {
                    "request_id": {
                        "type": "integer"
                    },
                    "chat_is_channel": {
                        "type": "boolean"
                    },
                    "chat_is_forum": {
                        "type": "boolean"
                    },
                    "chat_has_username": {
                        "type": "boolean"
                    },
                    "chat_is_created": {
                        "type": "boolean"
                    },
                    "user_administrator_rights": {
                        "$ref": "#/components/schemas/ChatAdministratorRights"
                    },
                    "bot_administrator_rights": {
                        "$ref": "#/components/schemas/ChatAdministratorRights"
                    },
                    "bot_is_member": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "KeyboardButtonPollType": {
                "description": "This object represents type of a poll, which is allowed to be created and sent when the corresponding button is pressed.",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReplyKeyboardRemove": {
                "description": "Upon receiving a message with this object, Telegram clients will remove the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see ReplyKeyboardMarkup).",
                "required": [
                    "remove_keyboard"
                ],
                "properties": {
                    "remove_keyboard": {
                        "type": "boolean",
                        "default": true
                    },
                    "selective": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InlineKeyboardMarkup": {
                "description": "This object represents an inline keyboard that appears right next to the message it belongs to.",
                "required": [
                    "inline_keyboard"
                ],
                "properties": {
                    "inline_keyboard": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/InlineKeyboardButton"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "InlineKeyboardButton": {
                "description": "This object represents one button of an inline keyboard. You must use exactly one of the optional fields.",
                "required": [
                    "text"
                ],
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "callback_data": {
                        "type": "string"
                    },
                    "web_app": {
                        "$ref": "#/components/schemas/WebAppInfo"
                    },
                    "login_url": {
                        "$ref": "#/components/schemas/LoginUrl"
                    },
                    "switch_inline_query": {
                        "type": "string"
                    },
                    "switch_inline_query_current_chat": {
                        "type": "string"
                    },
                    "switch_inline_query_chosen_chat": {
                        "$ref": "#/components/schemas/SwitchInlineQueryChosenChat"
                    },
                    "callback_game": {
                        "$ref": "#/components/schemas/CallbackGame"
                    },
                    "pay": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "LoginUrl": {
                "description": "This object represents a parameter of the inline keyboard button used to automatically authorize a user. Serves as a great replacement for the Telegram Login Widget when the user is coming from Telegram. All the user needs to do is tap/click a button and confirm that they want to log in:\nTelegram apps support these buttons as of version 5.7.",
                "required": [
                    "url"
                ],
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "forward_text": {
                        "type": "string"
                    },
                    "bot_username": {
                        "type": "string"
                    },
                    "request_write_access": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SwitchInlineQueryChosenChat": {
                "description": "This object represents an inline button that switches the current user to inline mode in a chosen chat, with an optional default inline query.",
                "properties": {
                    "query": {
                        "type": "string"
                    },
                    "allow_user_chats": {
                        "type": "boolean"
                    },
                    "allow_bot_chats": {
                        "type": "boolean"
                    },
                    "allow_group_chats": {
                        "type": "boolean"
                    },
                    "allow_channel_chats": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "CallbackQuery": {
                "description": "This object represents an incoming callback query from a callback button in an inline keyboard. If the button that originated the query was attached to a message sent by the bot, the field message will be present. If the button was attached to a message sent via the bot (in inline mode), the field inline_message_id will be present. Exactly one of the fields data or game_short_name will be present.",
                "required": [
                    "id",
                    "from",
                    "chat_instance"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "from": {
                        "$ref": "#/components/schemas/User"
                    },
                    "message": {
                        "$ref": "#/components/schemas/Message"
                    },
                    "inline_message_id": {
                        "type": "string"
                    },
                    "chat_instance": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    },
                    "game_short_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ForceReply": {
                "description": "Upon receiving a message with this object, Telegram clients will display a reply interface to the user (act as if the user has selected the bot's message and tapped 'Reply'). This can be extremely useful if you want to create user-friendly step-by-step interfaces without having to sacrifice privacy mode.",
                "required": [
                    "force_reply"
                ],
                "properties": {
                    "force_reply": {
                        "type": "boolean",
                        "default": true
                    },
                    "input_field_placeholder": {
                        "type": "string"
                    },
                    "selective": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChatPhoto": {
                "description": "This object represents a chat photo.",
                "required": [
                    "small_file_id",
                    "small_file_unique_id",
                    "big_file_id",
                    "big_file_unique_id"
                ],
                "properties": {
                    "small_file_id": {
                        "type": "string"
                    },
                    "small_file_unique_id": {
                        "type": "string"
                    },
                    "big_file_id": {
                        "type": "string"
                    },
                    "big_file_unique_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChatInviteLink": {
                "description": "Represents an invite link for a chat.",
                "required": [
                    "invite_link",
                    "creator",
                    "creates_join_request",
                    "is_primary",
                    "is_revoked"
                ],
                "properties": {
                    "invite_link": {
                        "type": "string"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/User"
                    },
                    "creates_join_request": {
                        "type": "boolean"
                    },
                    "is_primary": {
                        "type": "boolean"
                    },
                    "is_revoked": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "expire_date": {
                        "type": "integer"
                    },
                    "member_limit": {
                        "type": "integer"
                    },
                    "pending_join_request_count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ChatAdministratorRights": {
                "description": "Represents the rights of an administrator in a chat.",
                "required": [
                    "is_anonymous",
                    "can_manage_chat",
                    "can_delete_messages",
                    "can_manage_video_chats",
                    "can_restrict_members",
                    "can_promote_members",
                    "can_change_info",
                    "can_invite_users"
                ],
                "properties": {
                    "is_anonymous": {
                        "type": "boolean"
                    },
                    "can_manage_chat": {
                        "type": "boolean"
                    },
                    "can_delete_messages": {
                        "type": "boolean"
                    },
                    "can_manage_video_chats": {
                        "type": "boolean"
                    },
                    "can_restrict_members": {
                        "type": "boolean"
                    },
                    "can_promote_members": {
                        "type": "boolean"
                    },
                    "can_change_info": {
                        "type": "boolean"
                    },
                    "can_invite_users": {
                        "type": "boolean"
                    },
                    "can_post_messages": {
                        "type": "boolean"
                    },
                    "can_edit_messages": {
                        "type": "boolean"
                    },
                    "can_pin_messages": {
                        "type": "boolean"
                    },
                    "can_manage_topics": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChatMember": {
                "description": "This object contains information about one member of a chat. Currently, the following 6 types of chat members are supported:",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/ChatMemberOwner"
                    },
                    {
                        "$ref": "#/components/schemas/ChatMemberAdministrator"
                    },
                    {
                        "$ref": "#/components/schemas/ChatMemberMember"
                    },
                    {
                        "$ref": "#/components/schemas/ChatMemberRestricted"
                    },
                    {
                        "$ref": "#/components/schemas/ChatMemberLeft"
                    },
                    {
                        "$ref": "#/components/schemas/ChatMemberBanned"
                    }
                ]
            },
            "ChatMemberOwner": {
                "description": "Represents a chat member that owns the chat and has all administrator privileges.",
                "required": [
                    "status",
                    "user",
                    "is_anonymous"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "is_anonymous": {
                        "type": "boolean"
                    },
                    "custom_title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChatMemberAdministrator": {
                "description": "Represents a chat member that has some additional privileges.",
                "required": [
                    "status",
                    "user",
                    "can_be_edited",
                    "is_anonymous",
                    "can_manage_chat",
                    "can_delete_messages",
                    "can_manage_video_chats",
                    "can_restrict_members",
                    "can_promote_members",
                    "can_change_info",
                    "can_invite_users"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "can_be_edited": {
                        "type": "boolean"
                    },
                    "is_anonymous": {
                        "type": "boolean"
                    },
                    "can_manage_chat": {
                        "type": "boolean"
                    },
                    "can_delete_messages": {
                        "type": "boolean"
                    },
                    "can_manage_video_chats": {
                        "type": "boolean"
                    },
                    "can_restrict_members": {
                        "type": "boolean"
                    },
                    "can_promote_members": {
                        "type": "boolean"
                    },
                    "can_change_info": {
                        "type": "boolean"
                    },
                    "can_invite_users": {
                        "type": "boolean"
                    },
                    "can_post_messages": {
                        "type": "boolean"
                    },
                    "can_edit_messages": {
                        "type": "boolean"
                    },
                    "can_pin_messages": {
                        "type": "boolean"
                    },
                    "can_manage_topics": {
                        "type": "boolean"
                    },
                    "custom_title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChatMemberMember": {
                "description": "Represents a chat member that has no additional privileges or restrictions.",
                "required": [
                    "status",
                    "user"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "ChatMemberRestricted": {
                "description": "Represents a chat member that is under certain restrictions in the chat. Supergroups only.",
                "required": [
                    "status",
                    "user",
                    "is_member",
                    "can_send_messages",
                    "can_send_audios",
                    "can_send_documents",
                    "can_send_photos",
                    "can_send_videos",
                    "can_send_video_notes",
                    "can_send_voice_notes",
                    "can_send_polls",
                    "can_send_other_messages",
                    "can_add_web_page_previews",
                    "can_change_info",
                    "can_invite_users",
                    "can_pin_messages",
                    "can_manage_topics",
                    "until_date"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "is_member": {
                        "type": "boolean"
                    },
                    "can_send_messages": {
                        "type": "boolean"
                    },
                    "can_send_audios": {
                        "type": "boolean"
                    },
                    "can_send_documents": {
                        "type": "boolean"
                    },
                    "can_send_photos": {
                        "type": "boolean"
                    },
                    "can_send_videos": {
                        "type": "boolean"
                    },
                    "can_send_video_notes": {
                        "type": "boolean"
                    },
                    "can_send_voice_notes": {
                        "type": "boolean"
                    },
                    "can_send_polls": {
                        "type": "boolean"
                    },
                    "can_send_other_messages": {
                        "type": "boolean"
                    },
                    "can_add_web_page_previews": {
                        "type": "boolean"
                    },
                    "can_change_info": {
                        "type": "boolean"
                    },
                    "can_invite_users": {
                        "type": "boolean"
                    },
                    "can_pin_messages": {
                        "type": "boolean"
                    },
                    "can_manage_topics": {
                        "type": "boolean"
                    },
                    "until_date": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ChatMemberLeft": {
                "description": "Represents a chat member that isn't currently a member of the chat, but may join it themselves.",
                "required": [
                    "status",
                    "user"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "ChatMemberBanned": {
                "description": "Represents a chat member that was banned in the chat and can't return to the chat or view chat messages.",
                "required": [
                    "status",
                    "user",
                    "until_date"
                ],
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "until_date": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ChatMemberUpdated": {
                "description": "This object represents changes in the status of a chat member.",
                "required": [
                    "chat",
                    "from",
                    "date",
                    "old_chat_member",
                    "new_chat_member"
                ],
                "properties": {
                    "chat": {
                        "$ref": "#/components/schemas/Chat"
                    },
                    "from": {
                        "$ref": "#/components/schemas/User"
                    },
                    "date": {
                        "type": "integer"
                    },
                    "old_chat_member": {
                        "$ref": "#/components/schemas/ChatMember"
                    },
                    "new_chat_member": {
                        "$ref": "#/components/schemas/ChatMember"
                    },
                    "invite_link": {
                        "$ref": "#/components/schemas/ChatInviteLink"
                    },
                    "via_chat_folder_invite_link": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChatJoinRequest": {
                "description": "Represents a join request sent to a chat.",
                "required": [
                    "chat",
                    "from",
                    "user_chat_id",
                    "date"
                ],
                "properties": {
                    "chat": {
                        "$ref": "#/components/schemas/Chat"
                    },
                    "from": {
                        "$ref": "#/components/schemas/User"
                    },
                    "user_chat_id": {
                        "type": "integer"
                    },
                    "date": {
                        "type": "integer"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "invite_link": {
                        "$ref": "#/components/schemas/ChatInviteLink"
                    }
                },
                "type": "object"
            },
            "ChatPermissions": {
                "description": "Describes actions that a non-administrator user is allowed to take in a chat.",
                "properties": {
                    "can_send_messages": {
                        "type": "boolean"
                    },
                    "can_send_audios": {
                        "type": "boolean"
                    },
                    "can_send_documents": {
                        "type": "boolean"
                    },
                    "can_send_photos": {
                        "type": "boolean"
                    },
                    "can_send_videos": {
                        "type": "boolean"
                    },
                    "can_send_video_notes": {
                        "type": "boolean"
                    },
                    "can_send_voice_notes": {
                        "type": "boolean"
                    },
                    "can_send_polls": {
                        "type": "boolean"
                    },
                    "can_send_other_messages": {
                        "type": "boolean"
                    },
                    "can_add_web_page_previews": {
                        "type": "boolean"
                    },
                    "can_change_info": {
                        "type": "boolean"
                    },
                    "can_invite_users": {
                        "type": "boolean"
                    },
                    "can_pin_messages": {
                        "type": "boolean"
                    },
                    "can_manage_topics": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChatLocation": {
                "description": "Represents a location to which a chat is connected.",
                "required": [
                    "location",
                    "address"
                ],
                "properties": {
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "address": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ForumTopic": {
                "description": "This object represents a forum topic.",
                "required": [
                    "message_thread_id",
                    "name",
                    "icon_color"
                ],
                "properties": {
                    "message_thread_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "icon_color": {
                        "type": "integer"
                    },
                    "icon_custom_emoji_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BotCommand": {
                "description": "This object represents a bot command.",
                "required": [
                    "command",
                    "description"
                ],
                "properties": {
                    "command": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BotCommandScope": {
                "description": "This object represents the scope to which bot commands are applied. Currently, the following 7 scopes are supported:",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/BotCommandScopeDefault"
                    },
                    {
                        "$ref": "#/components/schemas/BotCommandScopeAllPrivateChats"
                    },
                    {
                        "$ref": "#/components/schemas/BotCommandScopeAllGroupChats"
                    },
                    {
                        "$ref": "#/components/schemas/BotCommandScopeAllChatAdministrators"
                    },
                    {
                        "$ref": "#/components/schemas/BotCommandScopeChat"
                    },
                    {
                        "$ref": "#/components/schemas/BotCommandScopeChatAdministrators"
                    },
                    {
                        "$ref": "#/components/schemas/BotCommandScopeChatMember"
                    }
                ]
            },
            "BotCommandScopeDefault": {
                "description": "Represents the default scope of bot commands. Default commands are used if no commands with a narrower scope are specified for the user.",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "default"
                    }
                },
                "type": "object"
            },
            "BotCommandScopeAllPrivateChats": {
                "description": "Represents the scope of bot commands, covering all private chats.",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "all_private_chats"
                    }
                },
                "type": "object"
            },
            "BotCommandScopeAllGroupChats": {
                "description": "Represents the scope of bot commands, covering all group and supergroup chats.",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "all_group_chats"
                    }
                },
                "type": "object"
            },
            "BotCommandScopeAllChatAdministrators": {
                "description": "Represents the scope of bot commands, covering all group and supergroup chat administrators.",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "all_chat_administrators"
                    }
                },
                "type": "object"
            },
            "BotCommandScopeChat": {
                "description": "Represents the scope of bot commands, covering a specific chat.",
                "required": [
                    "type",
                    "chat_id"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "chat"
                    },
                    "chat_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "BotCommandScopeChatAdministrators": {
                "description": "Represents the scope of bot commands, covering all administrators of a specific group or supergroup chat.",
                "required": [
                    "type",
                    "chat_id"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "chat_administrators"
                    },
                    "chat_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "BotCommandScopeChatMember": {
                "description": "Represents the scope of bot commands, covering a specific member of a group or supergroup chat.",
                "required": [
                    "type",
                    "chat_id",
                    "user_id"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "chat_member"
                    },
                    "chat_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BotName": {
                "description": "This object represents the bot's name.",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BotDescription": {
                "description": "This object represents the bot's description.",
                "required": [
                    "description"
                ],
                "properties": {
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BotShortDescription": {
                "description": "This object represents the bot's short description.",
                "required": [
                    "short_description"
                ],
                "properties": {
                    "short_description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MenuButton": {
                "description": "This object describes the bot's menu button in a private chat. It should be one of",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/MenuButtonCommands"
                    },
                    {
                        "$ref": "#/components/schemas/MenuButtonWebApp"
                    },
                    {
                        "$ref": "#/components/schemas/MenuButtonDefault"
                    }
                ]
            },
            "MenuButtonCommands": {
                "description": "Represents a menu button, which opens the bot's list of commands.",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "commands"
                    }
                },
                "type": "object"
            },
            "MenuButtonWebApp": {
                "description": "Represents a menu button, which launches a Web App.",
                "required": [
                    "type",
                    "text",
                    "web_app"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "web_app"
                    },
                    "text": {
                        "type": "string"
                    },
                    "web_app": {
                        "$ref": "#/components/schemas/WebAppInfo"
                    }
                },
                "type": "object"
            },
            "MenuButtonDefault": {
                "description": "Describes that no specific value for the menu button was set.",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "default"
                    }
                },
                "type": "object"
            },
            "ResponseParameters": {
                "description": "Describes why a request was unsuccessful.",
                "properties": {
                    "migrate_to_chat_id": {
                        "type": "integer"
                    },
                    "retry_after": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "InputMedia": {
                "description": "This object represents the content of a media message to be sent. It should be one of",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/InputMediaAnimation"
                    },
                    {
                        "$ref": "#/components/schemas/InputMediaDocument"
                    },
                    {
                        "$ref": "#/components/schemas/InputMediaAudio"
                    },
                    {
                        "$ref": "#/components/schemas/InputMediaPhoto"
                    },
                    {
                        "$ref": "#/components/schemas/InputMediaVideo"
                    }
                ]
            },
            "InputMediaPhoto": {
                "description": "Represents a photo to be sent.",
                "required": [
                    "type",
                    "media"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "photo"
                    },
                    "media": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "has_spoiler": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InputMediaVideo": {
                "description": "Represents a video to be sent.",
                "required": [
                    "type",
                    "media"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "video"
                    },
                    "media": {
                        "type": "string"
                    },
                    "thumbnail": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/InputFile"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "width": {
                        "type": "integer"
                    },
                    "height": {
                        "type": "integer"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "supports_streaming": {
                        "type": "boolean"
                    },
                    "has_spoiler": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InputMediaAnimation": {
                "description": "Represents an animation file (GIF or H.264/MPEG-4 AVC video without sound) to be sent.",
                "required": [
                    "type",
                    "media"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "animation"
                    },
                    "media": {
                        "type": "string"
                    },
                    "thumbnail": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/InputFile"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "width": {
                        "type": "integer"
                    },
                    "height": {
                        "type": "integer"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "has_spoiler": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InputMediaAudio": {
                "description": "Represents an audio file to be treated as music to be sent.",
                "required": [
                    "type",
                    "media"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "audio"
                    },
                    "media": {
                        "type": "string"
                    },
                    "thumbnail": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/InputFile"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "performer": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InputMediaDocument": {
                "description": "Represents a general file to be sent.",
                "required": [
                    "type",
                    "media"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "document"
                    },
                    "media": {
                        "type": "string"
                    },
                    "thumbnail": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/InputFile"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "disable_content_type_detection": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InputFile": {
                "description": "This object represents the contents of a file to be uploaded. Must be posted using multipart/form-data in the usual way that files are uploaded via the browser.",
                "type": "object"
            },
            "Sticker": {
                "description": "This object represents a sticker.",
                "required": [
                    "file_id",
                    "file_unique_id",
                    "type",
                    "width",
                    "height",
                    "is_animated",
                    "is_video"
                ],
                "properties": {
                    "file_id": {
                        "type": "string"
                    },
                    "file_unique_id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "width": {
                        "type": "integer"
                    },
                    "height": {
                        "type": "integer"
                    },
                    "is_animated": {
                        "type": "boolean"
                    },
                    "is_video": {
                        "type": "boolean"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/PhotoSize"
                    },
                    "emoji": {
                        "type": "string"
                    },
                    "set_name": {
                        "type": "string"
                    },
                    "premium_animation": {
                        "$ref": "#/components/schemas/File"
                    },
                    "mask_position": {
                        "$ref": "#/components/schemas/MaskPosition"
                    },
                    "custom_emoji_id": {
                        "type": "string"
                    },
                    "needs_repainting": {
                        "type": "boolean",
                        "default": true
                    },
                    "file_size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "StickerSet": {
                "description": "This object represents a sticker set.",
                "required": [
                    "name",
                    "title",
                    "sticker_type",
                    "is_animated",
                    "is_video",
                    "stickers"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "sticker_type": {
                        "type": "string"
                    },
                    "is_animated": {
                        "type": "boolean"
                    },
                    "is_video": {
                        "type": "boolean"
                    },
                    "stickers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sticker"
                        }
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/PhotoSize"
                    }
                },
                "type": "object"
            },
            "MaskPosition": {
                "description": "This object describes the position on faces where a mask should be placed by default.",
                "required": [
                    "point",
                    "x_shift",
                    "y_shift",
                    "scale"
                ],
                "properties": {
                    "point": {
                        "type": "string"
                    },
                    "x_shift": {
                        "type": "number"
                    },
                    "y_shift": {
                        "type": "number"
                    },
                    "scale": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "InputSticker": {
                "description": "This object describes a sticker to be added to a sticker set.",
                "required": [
                    "sticker",
                    "emoji_list"
                ],
                "properties": {
                    "sticker": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/InputFile"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "emoji_list": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mask_position": {
                        "$ref": "#/components/schemas/MaskPosition"
                    },
                    "keywords": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "InlineQuery": {
                "description": "This object represents an incoming inline query. When the user sends an empty query, your bot could return some default or trending results.",
                "required": [
                    "id",
                    "from",
                    "query",
                    "offset"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "from": {
                        "$ref": "#/components/schemas/User"
                    },
                    "query": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "string"
                    },
                    "chat_type": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultsButton": {
                "description": "This object represents a button to be shown above inline query results. You must use exactly one of the optional fields.",
                "required": [
                    "text"
                ],
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "web_app": {
                        "$ref": "#/components/schemas/WebAppInfo"
                    },
                    "start_parameter": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InlineQueryResult": {
                "description": "This object represents one result of an inline query. Telegram clients currently support results of the following 20 types:",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/InlineQueryResultCachedAudio"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultCachedDocument"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultCachedGif"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultCachedMpeg4Gif"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultCachedPhoto"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultCachedSticker"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultCachedVideo"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultCachedVoice"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultArticle"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultAudio"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultContact"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultGame"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultDocument"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultGif"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultLocation"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultMpeg4Gif"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultPhoto"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultVenue"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultVideo"
                    },
                    {
                        "$ref": "#/components/schemas/InlineQueryResultVoice"
                    }
                ]
            },
            "InlineQueryResultArticle": {
                "description": "Represents a link to an article or web page.",
                "required": [
                    "type",
                    "id",
                    "title",
                    "input_message_content"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "article"
                    },
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "url": {
                        "type": "string"
                    },
                    "hide_url": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "thumbnail_width": {
                        "type": "integer"
                    },
                    "thumbnail_height": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultPhoto": {
                "description": "Represents a link to a photo. By default, this photo will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo.",
                "required": [
                    "type",
                    "id",
                    "photo_url",
                    "thumbnail_url"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "photo"
                    },
                    "id": {
                        "type": "string"
                    },
                    "photo_url": {
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "photo_width": {
                        "type": "integer"
                    },
                    "photo_height": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultGif": {
                "description": "Represents a link to an animated GIF file. By default, this animated GIF file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.",
                "required": [
                    "type",
                    "id",
                    "gif_url",
                    "thumbnail_url"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "gif"
                    },
                    "id": {
                        "type": "string"
                    },
                    "gif_url": {
                        "type": "string"
                    },
                    "gif_width": {
                        "type": "integer"
                    },
                    "gif_height": {
                        "type": "integer"
                    },
                    "gif_duration": {
                        "type": "integer"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "thumbnail_mime_type": {
                        "type": "string",
                        "default": "image/jpeg"
                    },
                    "title": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultMpeg4Gif": {
                "description": "Represents a link to a video animation (H.264/MPEG-4 AVC video without sound). By default, this animated MPEG-4 file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.",
                "required": [
                    "type",
                    "id",
                    "mpeg4_url",
                    "thumbnail_url"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "mpeg4_gif"
                    },
                    "id": {
                        "type": "string"
                    },
                    "mpeg4_url": {
                        "type": "string"
                    },
                    "mpeg4_width": {
                        "type": "integer"
                    },
                    "mpeg4_height": {
                        "type": "integer"
                    },
                    "mpeg4_duration": {
                        "type": "integer"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "thumbnail_mime_type": {
                        "type": "string",
                        "default": "image/jpeg"
                    },
                    "title": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultVideo": {
                "description": "Represents a link to a page containing an embedded video player or a video file. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video.",
                "required": [
                    "type",
                    "id",
                    "video_url",
                    "mime_type",
                    "thumbnail_url",
                    "title"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "video"
                    },
                    "id": {
                        "type": "string"
                    },
                    "video_url": {
                        "type": "string"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "video_width": {
                        "type": "integer"
                    },
                    "video_height": {
                        "type": "integer"
                    },
                    "video_duration": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultAudio": {
                "description": "Represents a link to an MP3 audio file. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio.",
                "required": [
                    "type",
                    "id",
                    "audio_url",
                    "title"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "audio"
                    },
                    "id": {
                        "type": "string"
                    },
                    "audio_url": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "performer": {
                        "type": "string"
                    },
                    "audio_duration": {
                        "type": "integer"
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultVoice": {
                "description": "Represents a link to a voice recording in an .OGG container encoded with OPUS. By default, this voice recording will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the the voice message.",
                "required": [
                    "type",
                    "id",
                    "voice_url",
                    "title"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "voice"
                    },
                    "id": {
                        "type": "string"
                    },
                    "voice_url": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "voice_duration": {
                        "type": "integer"
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultDocument": {
                "description": "Represents a link to a file. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file. Currently, only .PDF and .ZIP files can be sent using this method.",
                "required": [
                    "type",
                    "id",
                    "title",
                    "document_url",
                    "mime_type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "document"
                    },
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "document_url": {
                        "type": "string"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "thumbnail_width": {
                        "type": "integer"
                    },
                    "thumbnail_height": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultLocation": {
                "description": "Represents a location on a map. By default, the location will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the location.",
                "required": [
                    "type",
                    "id",
                    "latitude",
                    "longitude",
                    "title"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "location"
                    },
                    "id": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "title": {
                        "type": "string"
                    },
                    "horizontal_accuracy": {
                        "type": "number"
                    },
                    "live_period": {
                        "type": "integer"
                    },
                    "heading": {
                        "type": "integer"
                    },
                    "proximity_alert_radius": {
                        "type": "integer"
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "thumbnail_width": {
                        "type": "integer"
                    },
                    "thumbnail_height": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultVenue": {
                "description": "Represents a venue. By default, the venue will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the venue.",
                "required": [
                    "type",
                    "id",
                    "latitude",
                    "longitude",
                    "title",
                    "address"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "venue"
                    },
                    "id": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "title": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "foursquare_id": {
                        "type": "string"
                    },
                    "foursquare_type": {
                        "type": "string"
                    },
                    "google_place_id": {
                        "type": "string"
                    },
                    "google_place_type": {
                        "type": "string"
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "thumbnail_width": {
                        "type": "integer"
                    },
                    "thumbnail_height": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultContact": {
                "description": "Represents a contact with a phone number. By default, this contact will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the contact.",
                "required": [
                    "type",
                    "id",
                    "phone_number",
                    "first_name"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "contact"
                    },
                    "id": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "vcard": {
                        "type": "string"
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "thumbnail_width": {
                        "type": "integer"
                    },
                    "thumbnail_height": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultGame": {
                "description": "Represents a Game.",
                "required": [
                    "type",
                    "id",
                    "game_short_name"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "game"
                    },
                    "id": {
                        "type": "string"
                    },
                    "game_short_name": {
                        "type": "string"
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultCachedPhoto": {
                "description": "Represents a link to a photo stored on the Telegram servers. By default, this photo will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo.",
                "required": [
                    "type",
                    "id",
                    "photo_file_id"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "photo"
                    },
                    "id": {
                        "type": "string"
                    },
                    "photo_file_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultCachedGif": {
                "description": "Represents a link to an animated GIF file stored on the Telegram servers. By default, this animated GIF file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with specified content instead of the animation.",
                "required": [
                    "type",
                    "id",
                    "gif_file_id"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "gif"
                    },
                    "id": {
                        "type": "string"
                    },
                    "gif_file_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultCachedMpeg4Gif": {
                "description": "Represents a link to a video animation (H.264/MPEG-4 AVC video without sound) stored on the Telegram servers. By default, this animated MPEG-4 file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.",
                "required": [
                    "type",
                    "id",
                    "mpeg4_file_id"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "mpeg4_gif"
                    },
                    "id": {
                        "type": "string"
                    },
                    "mpeg4_file_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultCachedSticker": {
                "description": "Represents a link to a sticker stored on the Telegram servers. By default, this sticker will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the sticker.",
                "required": [
                    "type",
                    "id",
                    "sticker_file_id"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "sticker"
                    },
                    "id": {
                        "type": "string"
                    },
                    "sticker_file_id": {
                        "type": "string"
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultCachedDocument": {
                "description": "Represents a link to a file stored on the Telegram servers. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file.",
                "required": [
                    "type",
                    "id",
                    "title",
                    "document_file_id"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "document"
                    },
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "document_file_id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultCachedVideo": {
                "description": "Represents a link to a video file stored on the Telegram servers. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video.",
                "required": [
                    "type",
                    "id",
                    "video_file_id",
                    "title"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "video"
                    },
                    "id": {
                        "type": "string"
                    },
                    "video_file_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultCachedVoice": {
                "description": "Represents a link to a voice message stored on the Telegram servers. By default, this voice message will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the voice message.",
                "required": [
                    "type",
                    "id",
                    "voice_file_id",
                    "title"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "voice"
                    },
                    "id": {
                        "type": "string"
                    },
                    "voice_file_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InlineQueryResultCachedAudio": {
                "description": "Represents a link to an MP3 audio file stored on the Telegram servers. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio.",
                "required": [
                    "type",
                    "id",
                    "audio_file_id"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "audio"
                    },
                    "id": {
                        "type": "string"
                    },
                    "audio_file_id": {
                        "type": "string"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "caption_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "reply_markup": {
                        "$ref": "#/components/schemas/InlineKeyboardMarkup"
                    },
                    "input_message_content": {
                        "$ref": "#/components/schemas/InputMessageContent"
                    }
                },
                "type": "object"
            },
            "InputMessageContent": {
                "description": "This object represents the content of a message to be sent as a result of an inline query. Telegram clients currently support the following 5 types:",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/InputTextMessageContent"
                    },
                    {
                        "$ref": "#/components/schemas/InputLocationMessageContent"
                    },
                    {
                        "$ref": "#/components/schemas/InputVenueMessageContent"
                    },
                    {
                        "$ref": "#/components/schemas/InputContactMessageContent"
                    },
                    {
                        "$ref": "#/components/schemas/InputInvoiceMessageContent"
                    }
                ]
            },
            "InputTextMessageContent": {
                "description": "Represents the content of a text message to be sent as the result of an inline query.",
                "required": [
                    "message_text"
                ],
                "properties": {
                    "message_text": {
                        "type": "string"
                    },
                    "parse_mode": {
                        "type": "string"
                    },
                    "entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "disable_web_page_preview": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InputLocationMessageContent": {
                "description": "Represents the content of a location message to be sent as the result of an inline query.",
                "required": [
                    "latitude",
                    "longitude"
                ],
                "properties": {
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "horizontal_accuracy": {
                        "type": "number"
                    },
                    "live_period": {
                        "type": "integer"
                    },
                    "heading": {
                        "type": "integer"
                    },
                    "proximity_alert_radius": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "InputVenueMessageContent": {
                "description": "Represents the content of a venue message to be sent as the result of an inline query.",
                "required": [
                    "latitude",
                    "longitude",
                    "title",
                    "address"
                ],
                "properties": {
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "title": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "foursquare_id": {
                        "type": "string"
                    },
                    "foursquare_type": {
                        "type": "string"
                    },
                    "google_place_id": {
                        "type": "string"
                    },
                    "google_place_type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InputContactMessageContent": {
                "description": "Represents the content of a contact message to be sent as the result of an inline query.",
                "required": [
                    "phone_number",
                    "first_name"
                ],
                "properties": {
                    "phone_number": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "vcard": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InputInvoiceMessageContent": {
                "description": "Represents the content of an invoice message to be sent as the result of an inline query.",
                "required": [
                    "title",
                    "description",
                    "payload",
                    "provider_token",
                    "currency",
                    "prices"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "payload": {
                        "type": "string"
                    },
                    "provider_token": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LabeledPrice"
                        }
                    },
                    "max_tip_amount": {
                        "type": "integer"
                    },
                    "suggested_tip_amounts": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "provider_data": {
                        "type": "string"
                    },
                    "photo_url": {
                        "type": "string"
                    },
                    "photo_size": {
                        "type": "integer"
                    },
                    "photo_width": {
                        "type": "integer"
                    },
                    "photo_height": {
                        "type": "integer"
                    },
                    "need_name": {
                        "type": "boolean"
                    },
                    "need_phone_number": {
                        "type": "boolean"
                    },
                    "need_email": {
                        "type": "boolean"
                    },
                    "need_shipping_address": {
                        "type": "boolean"
                    },
                    "send_phone_number_to_provider": {
                        "type": "boolean"
                    },
                    "send_email_to_provider": {
                        "type": "boolean"
                    },
                    "is_flexible": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChosenInlineResult": {
                "description": "Represents a result of an inline query that was chosen by the user and sent to their chat partner.",
                "required": [
                    "result_id",
                    "from",
                    "query"
                ],
                "properties": {
                    "result_id": {
                        "type": "string"
                    },
                    "from": {
                        "$ref": "#/components/schemas/User"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "inline_message_id": {
                        "type": "string"
                    },
                    "query": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SentWebAppMessage": {
                "description": "Describes an inline message sent by a Web App on behalf of a user.",
                "properties": {
                    "inline_message_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LabeledPrice": {
                "description": "This object represents a portion of the price for goods or services.",
                "required": [
                    "label",
                    "amount"
                ],
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Invoice": {
                "description": "This object contains basic information about an invoice.",
                "required": [
                    "title",
                    "description",
                    "start_parameter",
                    "currency",
                    "total_amount"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "start_parameter": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "total_amount": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ShippingAddress": {
                "description": "This object represents a shipping address.",
                "required": [
                    "country_code",
                    "state",
                    "city",
                    "street_line1",
                    "street_line2",
                    "post_code"
                ],
                "properties": {
                    "country_code": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "street_line1": {
                        "type": "string"
                    },
                    "street_line2": {
                        "type": "string"
                    },
                    "post_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OrderInfo": {
                "description": "This object represents information about an order.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "shipping_address": {
                        "$ref": "#/components/schemas/ShippingAddress"
                    }
                },
                "type": "object"
            },
            "ShippingOption": {
                "description": "This object represents one shipping option.",
                "required": [
                    "id",
                    "title",
                    "prices"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LabeledPrice"
                        }
                    }
                },
                "type": "object"
            },
            "SuccessfulPayment": {
                "description": "This object contains basic information about a successful payment.",
                "required": [
                    "currency",
                    "total_amount",
                    "invoice_payload",
                    "telegram_payment_charge_id",
                    "provider_payment_charge_id"
                ],
                "properties": {
                    "currency": {
                        "type": "string"
                    },
                    "total_amount": {
                        "type": "integer"
                    },
                    "invoice_payload": {
                        "type": "string"
                    },
                    "shipping_option_id": {
                        "type": "string"
                    },
                    "order_info": {
                        "$ref": "#/components/schemas/OrderInfo"
                    },
                    "telegram_payment_charge_id": {
                        "type": "string"
                    },
                    "provider_payment_charge_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ShippingQuery": {
                "description": "This object contains information about an incoming shipping query.",
                "required": [
                    "id",
                    "from",
                    "invoice_payload",
                    "shipping_address"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "from": {
                        "$ref": "#/components/schemas/User"
                    },
                    "invoice_payload": {
                        "type": "string"
                    },
                    "shipping_address": {
                        "$ref": "#/components/schemas/ShippingAddress"
                    }
                },
                "type": "object"
            },
            "PreCheckoutQuery": {
                "description": "This object contains information about an incoming pre-checkout query.",
                "required": [
                    "id",
                    "from",
                    "currency",
                    "total_amount",
                    "invoice_payload"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "from": {
                        "$ref": "#/components/schemas/User"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "total_amount": {
                        "type": "integer"
                    },
                    "invoice_payload": {
                        "type": "string"
                    },
                    "shipping_option_id": {
                        "type": "string"
                    },
                    "order_info": {
                        "$ref": "#/components/schemas/OrderInfo"
                    }
                },
                "type": "object"
            },
            "PassportData": {
                "description": "Describes Telegram Passport data shared with the bot by the user.",
                "required": [
                    "data",
                    "credentials"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EncryptedPassportElement"
                        }
                    },
                    "credentials": {
                        "$ref": "#/components/schemas/EncryptedCredentials"
                    }
                },
                "type": "object"
            },
            "PassportFile": {
                "description": "This object represents a file uploaded to Telegram Passport. Currently all Telegram Passport files are in JPEG format when decrypted and don't exceed 10MB.",
                "required": [
                    "file_id",
                    "file_unique_id",
                    "file_size",
                    "file_date"
                ],
                "properties": {
                    "file_id": {
                        "type": "string"
                    },
                    "file_unique_id": {
                        "type": "string"
                    },
                    "file_size": {
                        "type": "integer"
                    },
                    "file_date": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "EncryptedPassportElement": {
                "description": "Describes documents or other Telegram Passport elements shared with the bot by the user.",
                "required": [
                    "type",
                    "hash"
                ],
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PassportFile"
                        }
                    },
                    "front_side": {
                        "$ref": "#/components/schemas/PassportFile"
                    },
                    "reverse_side": {
                        "$ref": "#/components/schemas/PassportFile"
                    },
                    "selfie": {
                        "$ref": "#/components/schemas/PassportFile"
                    },
                    "translation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PassportFile"
                        }
                    },
                    "hash": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EncryptedCredentials": {
                "description": "Describes data required for decrypting and authenticating EncryptedPassportElement. See the Telegram Passport Documentation for a complete description of the data decryption and authentication processes.",
                "required": [
                    "data",
                    "hash",
                    "secret"
                ],
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "hash": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PassportElementError": {
                "description": "This object represents an error in the Telegram Passport element which was submitted that should be resolved by the user. It should be one of:",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/PassportElementErrorDataField"
                    },
                    {
                        "$ref": "#/components/schemas/PassportElementErrorFrontSide"
                    },
                    {
                        "$ref": "#/components/schemas/PassportElementErrorReverseSide"
                    },
                    {
                        "$ref": "#/components/schemas/PassportElementErrorSelfie"
                    },
                    {
                        "$ref": "#/components/schemas/PassportElementErrorFile"
                    },
                    {
                        "$ref": "#/components/schemas/PassportElementErrorFiles"
                    },
                    {
                        "$ref": "#/components/schemas/PassportElementErrorTranslationFile"
                    },
                    {
                        "$ref": "#/components/schemas/PassportElementErrorTranslationFiles"
                    },
                    {
                        "$ref": "#/components/schemas/PassportElementErrorUnspecified"
                    }
                ]
            },
            "PassportElementErrorDataField": {
                "description": "Represents an issue in one of the data fields that was provided by the user. The error is considered resolved when the field's value changes.",
                "required": [
                    "source",
                    "type",
                    "field_name",
                    "data_hash",
                    "message"
                ],
                "properties": {
                    "source": {
                        "type": "string",
                        "default": "data"
                    },
                    "type": {
                        "type": "string"
                    },
                    "field_name": {
                        "type": "string"
                    },
                    "data_hash": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PassportElementErrorFrontSide": {
                "description": "Represents an issue with the front side of a document. The error is considered resolved when the file with the front side of the document changes.",
                "required": [
                    "source",
                    "type",
                    "file_hash",
                    "message"
                ],
                "properties": {
                    "source": {
                        "type": "string",
                        "default": "front_side"
                    },
                    "type": {
                        "type": "string"
                    },
                    "file_hash": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PassportElementErrorReverseSide": {
                "description": "Represents an issue with the reverse side of a document. The error is considered resolved when the file with reverse side of the document changes.",
                "required": [
                    "source",
                    "type",
                    "file_hash",
                    "message"
                ],
                "properties": {
                    "source": {
                        "type": "string",
                        "default": "reverse_side"
                    },
                    "type": {
                        "type": "string"
                    },
                    "file_hash": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PassportElementErrorSelfie": {
                "description": "Represents an issue with the selfie with a document. The error is considered resolved when the file with the selfie changes.",
                "required": [
                    "source",
                    "type",
                    "file_hash",
                    "message"
                ],
                "properties": {
                    "source": {
                        "type": "string",
                        "default": "selfie"
                    },
                    "type": {
                        "type": "string"
                    },
                    "file_hash": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PassportElementErrorFile": {
                "description": "Represents an issue with a document scan. The error is considered resolved when the file with the document scan changes.",
                "required": [
                    "source",
                    "type",
                    "file_hash",
                    "message"
                ],
                "properties": {
                    "source": {
                        "type": "string",
                        "default": "file"
                    },
                    "type": {
                        "type": "string"
                    },
                    "file_hash": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PassportElementErrorFiles": {
                "description": "Represents an issue with a list of scans. The error is considered resolved when the list of files containing the scans changes.",
                "required": [
                    "source",
                    "type",
                    "file_hashes",
                    "message"
                ],
                "properties": {
                    "source": {
                        "type": "string",
                        "default": "files"
                    },
                    "type": {
                        "type": "string"
                    },
                    "file_hashes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PassportElementErrorTranslationFile": {
                "description": "Represents an issue with one of the files that constitute the translation of a document. The error is considered resolved when the file changes.",
                "required": [
                    "source",
                    "type",
                    "file_hash",
                    "message"
                ],
                "properties": {
                    "source": {
                        "type": "string",
                        "default": "translation_file"
                    },
                    "type": {
                        "type": "string"
                    },
                    "file_hash": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PassportElementErrorTranslationFiles": {
                "description": "Represents an issue with the translated version of a document. The error is considered resolved when a file with the document translation change.",
                "required": [
                    "source",
                    "type",
                    "file_hashes",
                    "message"
                ],
                "properties": {
                    "source": {
                        "type": "string",
                        "default": "translation_files"
                    },
                    "type": {
                        "type": "string"
                    },
                    "file_hashes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PassportElementErrorUnspecified": {
                "description": "Represents an issue in an unspecified place. The error is considered resolved when new data is added.",
                "required": [
                    "source",
                    "type",
                    "element_hash",
                    "message"
                ],
                "properties": {
                    "source": {
                        "type": "string",
                        "default": "unspecified"
                    },
                    "type": {
                        "type": "string"
                    },
                    "element_hash": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Game": {
                "description": "This object represents a game. Use BotFather to create and edit games, their short names will act as unique identifiers.",
                "required": [
                    "title",
                    "description",
                    "photo"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "photo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhotoSize"
                        }
                    },
                    "text": {
                        "type": "string"
                    },
                    "text_entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageEntity"
                        }
                    },
                    "animation": {
                        "$ref": "#/components/schemas/Animation"
                    }
                },
                "type": "object"
            },
            "CallbackGame": {
                "description": "A placeholder, currently holds no information. Use BotFather to set up your game.",
                "type": "object"
            },
            "GameHighScore": {
                "description": "This object represents one row of the high scores table for a game.",
                "required": [
                    "position",
                    "user",
                    "score"
                ],
                "properties": {
                    "position": {
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "score": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        }
    }
}
