{
    "$schema": "http://json-schema.org/draft/2019-09/schema",
    "$id": "https://jsonschema.xyz/schemas/JsonSerializerOptions.schema",
    "contentMediaType": "application/schema+json",
    "lastModified": "2023-12-31T19:08:00.0000+05:00Z",
    "title": "JSON Serializer Options",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "$schema": {
            "type": "string",
            "format": "uri",
            "default": "https://jsonschema.xyz/schemas/JsonSerializerOptions.schema"
        },
        "Converters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JsonConverter"
            }
        },
        "TypeInfoResolver": {
            "oneOf": [
                {
                    "type": "null"
                },
                {
                    "$ref": "#/$defs/IJsonTypeInfoResolver"
                }
            ]
        },
        "TypeInfoResolverChain": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IJsonTypeInfoResolver"
            }
        },
        "AllowTrailingCommas": {
            "type": "boolean"
        },
        "DefaultBufferSize": {
            "type": "integer",
            "format": "int32"
        },
        "Encoder": {
            "oneOf": [
                {
                    "type": "null"
                },
                {
                    "$ref": "#/$defs/JavaScriptEncoder"
                }
            ]
        },
        "DictionaryKeyPolicy": {
            "oneOf": [
                {
                    "type": "null"
                },
                {
                    "$ref": "#/$defs/JsonNamingPolicy"
                }
            ]
        },
        "IgnoreNullValues": {
            "type": "boolean",
                    "deprecated": true,
                    "x-deprecated": true,
            "x-deprecatedMessage": "JsonSerializerOptions.IgnoreNullValues is obsolete. To ignore null values when serializing, set DefaultIgnoreCondition to JsonIgnoreCondition.WhenWritingNull."
        },
        "DefaultIgnoreCondition": {
            "$ref": "#/$defs/JsonIgnoreCondition"
        },
        "NumberHandling": {
            "$ref": "#/$defs/JsonNumberHandling"
        },
        "PreferredObjectCreationHandling": {
            "$ref": "#/$defs/JsonObjectCreationHandling"
        },
        "IgnoreReadOnlyProperties": {
            "type": "boolean"
        },
        "IgnoreReadOnlyFields": {
            "type": "boolean"
        },
        "IncludeFields": {
            "type": "boolean"
        },
        "MaxDepth": {
            "type": "integer",
            "format": "int32"
        },
        "PropertyNamingPolicy": {
            "oneOf": [
                {
                    "type": "null"
                },
                {
                    "$ref": "#/$defs/JsonNamingPolicy"
                }
            ]
        },
        "PropertyNameCaseInsensitive": {
            "type": "boolean"
        },
        "ReadCommentHandling": {
            "$ref": "#/$defs/JsonCommentHandling"
        },
        "UnknownTypeHandling": {
            "$ref": "#/$defs/JsonUnknownTypeHandling"
        },
        "UnmappedMemberHandling": {
            "$ref": "#/$defs/JsonUnmappedMemberHandling"
        },
        "WriteIndented": {
            "type": "boolean"
        },
        "ReferenceHandler": {
            "oneOf": [
                {
                    "type": "null"
                },
                {
                    "$ref": "#/$defs/ReferenceHandler"
                }
            ]
        },
        "IsReadOnly": {
            "type": "boolean"
        }
    },
    "$defs": {
        "JsonConverter": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
        },
        "IJsonTypeInfoResolver": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
        },
        "JavaScriptEncoder": {
            "allOf": [
                {
                    "$ref": "#/$defs/TextEncoder"
                },
                {
                    "type": "object",
                    "x-abstract": true,
                    "additionalProperties": false
                }
            ]
        },
        "TextEncoder": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
        },
        "JsonNamingPolicy": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
        },
        "JsonIgnoreCondition": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Never",
                "Always",
                "WhenWritingDefault",
                "WhenWritingNull"
            ],
            "enum": [
                0,
                1,
                2,
                3
            ]
        },
        "JsonNumberHandling": {
            "type": "integer",
            "description": "",
            "x-enumFlags": true,
            "x-enumNames": [
                "Strict",
                "AllowReadingFromString",
                "WriteAsString",
                "AllowNamedFloatingPointLiterals"
            ],
            "enum": [
                0,
                1,
                2,
                4
            ]
        },
        "JsonObjectCreationHandling": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Replace",
                "Populate"
            ],
            "enum": [
                0,
                1
            ]
        },
        "JsonCommentHandling": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Disallow",
                "Skip",
                "Allow"
            ],
            "enum": [
                0,
                1,
                2
            ]
        },
        "JsonUnknownTypeHandling": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "JsonElement",
                "JsonNode"
            ],
            "enum": [
                0,
                1
            ]
        },
        "JsonUnmappedMemberHandling": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Skip",
                "Disallow"
            ],
            "enum": [
                0,
                1
            ]
        },
        "ReferenceHandler": {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
        }
    }
}
